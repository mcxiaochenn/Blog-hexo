<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>这可能是 iOS 自签的版本答案，二合一 LiveContainer 教程来辣！</title>
      <link href="/posts/801b/"/>
      <url>/posts/801b/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="# 前情提要" class="headerlink" title="前情提要"></a>前情提要 </h2><p> 本次教程使用 LiveContainer+SideStore 二合一版本，此版本还处于试验阶段，本人体验没有发现恶性 bug，请勿用于重要场景！！！</p><h2 id="准备工作"><a href="# 准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>一台运行 Windows 10 或更高版本的 PC</li><li>一部运行 iOS&#x2F;iPadOS 14 或更高版本的设备</li><li>一个美区 Apple ID（无须充值或绑定信用卡）</li><li>良好的网络</li></ul><h2 id="重要提醒"><a href="# 重要提醒" class="headerlink" title="重要提醒"></a>重要提醒 </h2><p> 请确保你的 PC 的用户名为英文，否则可能会出现莫名其妙的问题，如果遇到，推荐更换设备或使用网吧电脑。如果你已经在使用网吧电脑，请确保后续步骤中将手机与电脑的连接线插到机箱后面的主板接口上（家用电脑也是一样）！！！</p><h2 id="所需文件"><a href="# 所需文件" class="headerlink" title="所需文件"></a>所需文件 </h2><p> 在电脑上下载以下文件：</p><ul><li><a href="https://cdn.altstore.io/file/altstore/altinstaller.zip">AltServer 安装包</a></li><li><a href="https://updates.cdn-apple.com/2020/windows/001-39935-20200911-1A70AA56-F448-11EA-8CC0-99D41950005E/iCloudSetup.exe">AltServer 支持 iCloud</a></li><li><a href="https://github.com/jkcoxson/idevice_pair/releases/latest/download/iDevicePair--windows-x86_64.exe">idevice pair</a></li><li><a href="https://localsend.org/zh-CN/download">LocalSend</a></li><li><a href="https://github.com/sidestore/sidestore/releases/latest/download/sidestore.ipa">SideStore IPA 安装包</a></li><li><a href="https://github.com/LiveContainer/LiveContainer/releases/latest/download/LiveContainer+SideStore.ipa">LiveContainer+SideStore 二合一安装包</a></li></ul><h2 id="安装步骤"><a href="# 安装步骤" class="headerlink" title="安装步骤"></a>安装步骤 </h2><p> 可以配合视频食用😋：<a href="https://www.bilibili.com/video/BV11kYYzBEBT/">https://www.bilibili.com/video/BV11kYYzBEBT/</a></p><h3 id="安装 -AltServer"><a href="# 安装 -AltServer" class="headerlink" title="安装 AltServer"></a>安装 AltServer</h3><p>记得先安装<a href="https://updates.cdn-apple.com/2020/windows/001-39935-20200911-1A70AA56-F448-11EA-8CC0-99D41950005E/iCloudSetup.exe">AltServer 支持 iCloud</a>，这俩都没啥讲究，一路下一步就行。</p><blockquote><p>需要注意的是如果你已安装 Microsoft Store 版本的 iCould&#x2F;iTunes，请卸载它。</p></blockquote><h3 id="使用 -AltServer- 安装 -SideStore"><a href="# 使用 -AltServer- 安装 -SideStore" class="headerlink" title="使用 AltServer 安装 SideStore"></a>使用 AltServer 安装 SideStore</h3><ol><li>用数据线连接设备</li><li>运行 AltServer</li><li>去资源管理器托盘栏找到一个棱形图标,Shift + 左键<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/sideloadipa.png" alt="戳他"></li><li>鼠标移动到 <strong>Sideload .ipa</strong> 点击你的设备名，选择上面下载的<strong>SideStore IPA</strong><br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/click-sidestore.png" alt="选择 SideStore IPA"></li><li>这时候会弹出窗口要你输入你的 Apple ID 和密码，放心输入，完了验证一下，稍等片刻你的手机桌面上就有 SideStore app 了（这时候先不要打开它）<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/shuru-apid.png" alt="输入 Apple ID 和密码"></li></ol><h3 id="使用 idevice-pair 获取设备文件"><a href="# 使用 idevice-pair 获取设备文件" class="headerlink" title="使用 idevice pair 获取设备文件"></a>使用 idevice pair 获取设备文件</h3><ol><li>打开上面下载的 <a href="https://github.com/jkcoxson/idevice_pair/releases/latest/download/iDevicePair--windows-x86_64.exe">idevice pair</a> 程序<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/whilt-idevicepair.png" alt="你会发现软件界面比你脸还干净"></li><li>不要着急不要慌~，确定你的手机已连接电脑并解锁，点击 <strong>Refresh</strong> 然后打开上方复选框选中你的设备名<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/refresh.png" alt="zhe 样子~"></li><li>确定开发者选项已开启，点击 <strong>Generate</strong> 生成配置文件<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/setok.png" alt="戳他戳他！"></li><li>往下翻一点找到 <strong>SideStore</strong> 项，点击<strong>Install</strong><br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/sidestore-send-install.png" alt="戳！"></li><li>保存配置文件到本地，点击 <strong>Save to File</strong> 项中的<strong>Save to File</strong>，把它保存到一个你能记住的地方<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/save-to-file.png" alt="保存文件"></li></ol><h3 id="传输必要文件到手机上"><a href="# 传输必要文件到手机上" class="headerlink" title="传输必要文件到手机上"></a>传输必要文件到手机上</h3><ol><li>把上方 <strong>使用 idevice pair 获取设备文件 </strong> 步骤 中保存的 <code>xxxxx-xxxxx-xxxxx-xxxxx.plist</code> 文件和刚刚下载的 <a href="https://github.com/LiveContainer/LiveContainer/releases/latest/download/LiveContainer+SideStore.ipa">LiveContainer+SideStore 二合一安装包</a>，使用<a href="https://localsend.org/zh-CN/download">LocalSend</a> 传输到手机上<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/localsend-send-file.png" alt="传输示意"></li></ol><h3 id="安装与启用 -StosVPN"><a href="# 安装与启用 -StosVPN" class="headerlink" title="安装与启用 StosVPN"></a>安装与启用 StosVPN</h3><ol><li>AppStore 登录你的美区 Apple ID</li><li>搜索并下载 StosVPN（<strong>后续都需要，不要卸载，在每次使用 SideStore 的时候都需要开启</strong>）<blockquote><p>StosVPN 不连接外网，仅用于本机通信以支持 SideStore</p></blockquote></li><li>连接 StosVPN</li></ol><h3 id="配置 SideStore"><a href="# 配置 SideStore" class="headerlink" title="配置 SideStore"></a>配置 SideStore</h3><ol><li>打开 SideStore，在设置页面使用安装时的 Apple ID 登录</li><li>点击 + 号 -&gt; 选择<strong>LiveContainer+SideStore 二合一安装包</strong> -&gt; <code>Yes</code> -&gt; <code>Got it</code> -&gt; <code>Refresh Now</code> -&gt; <code>Keep App Extensions（Use Main Profile）</code> -&gt; 好辣！</li><li>运行 <strong>LiveContainer</strong> 确定可以正常打开</li><li>卸载 SideStore</li></ol><h3 id="配置 LiveContainer 内的 SideStore"><a href="# 配置 LiveContainer 内的 SideStore" class="headerlink" title="配置 LiveContainer 内的 SideStore"></a>配置 LiveContainer 内的 SideStore</h3><ol><li>点击 LiveContainer 软件内上方菜单栏中的 SideStore 图标<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/in-LiveContainer-go-SideStore.png" alt="点它！"></li><li>此时软件会闪退，再进去你会发现已经变成 SideStore 的界面了</li><li>图里这一步点 <code>OK</code> 导入之前设置的配置文件（如果这一步点错了可以去 <strong> 常见问题查看解决方法</strong>）<br><img src="/img/%E8%BF%99%E5%8F%AF%E8%83%BD%E6%98%AFiOS%E8%87%AA%E7%AD%BE%E7%9A%84%E7%89%88%E6%9C%AC%E7%AD%94%E6%A1%88%EF%BC%8C%E4%BA%8C%E5%90%88%E4%B8%80LiveContainer%E6%95%99%E7%A8%8B%E6%9D%A5%E8%BE%A3%EF%BC%81/add-pairingile.png" alt="Pairing File"></li><li>进入 <code>app</code> 页，点击 <code>Refresh Now</code>，登录<strong> 配置 SideStore</strong>时使用的 Apple ID</li><li>重复 <code>Yes</code> -&gt; <code>Got it</code> -&gt; <code>Keep App Extensions（Use Main Profile）</code> -&gt; 好辣！</li><li>退出后台再进，回到 LiveContainer 界面，点击 <code> 设置 </code>，<code> 刷新来自 SideStore 的证书</code>，按照引导导入</li></ol><h3 id="大功告成"><a href="# 大功告成" class="headerlink" title="大功告成"></a>大功告成 </h3><p> 完成后你就可以愉快使用此工具了 :)</p><p>下期教程教如何在此基础上启动 JIT，敬请期待</p><h2 id="常见问题"><a href="# 常见问题" class="headerlink" title="常见问题"></a>常见问题 </h2><h3 id="安装 iCloud 提示电脑缺少媒体功能"><a href="# 安装 iCloud 提示电脑缺少媒体功能" class="headerlink" title="安装 iCloud 提示电脑缺少媒体功能"></a> 安装 iCloud 提示电脑缺少媒体功能</h3><p>Windows Media Player 可在 PC 上播放视频和音频文件。你需要有 Media Player 才能安装 Windows 版 iCloud。如果你在尝试下载 Windows 版 iCloud 11 或更高版本时收到一条信息，提示你需要安装媒体功能包才能使用 iCloud，请选择“下载”。然后，按照下一屏幕上的说明进行操作。</p><p>如果你关闭了 Windows 媒体功能，或者如果你的 PC 未安装 Windows Media Player，则无法安装 Windows 版 iCloud。</p><ol><li>前往“控制面板”&gt;“所有控制面板项”&gt;“程序和功能”。</li><li>点按“启用或关闭 Windows 功能”。</li><li>选中媒体功能对应的框，以重新打开该功能。</li><li>点按“好”。</li></ol><p>如果你看到一条信息，提示你重新启动 PC，请重新启动电脑，然后安装 Windows 版 iCloud。</p><h3 id="我选错了 - 没选 Pairing-File"><a href="# 我选错了 - 没选 Pairing-File" class="headerlink" title="我选错了 &#x2F; 没选 Pairing File"></a>我选错了 &#x2F; 没选 Pairing File</h3><p>可以在 SideStore 点 <code>Settings</code>-&gt;<code>Reset Pairing File</code> 然后大退 app 重选</p><h3 id="SideStore 报错 xxxxx"><a href="#SideStore 报错 xxxxx" class="headerlink" title="SideStore 报错 xxxxx"></a>SideStore 报错 xxxxx</h3><p>去 <a href="https://docs.sidestore.io/docs/troubleshooting/error-codes">SideStore 官方文档</a> 查看对应报错代码，看不懂用翻译，还是不懂把报错丢给 AI，实在解决不了再问我。</p><hr><h2 id="参考资料（排名不分前后）"><a href="# 参考资料（排名不分前后）" class="headerlink" title="参考资料（排名不分前后）"></a>参考资料（排名不分前后）</h2><ul><li><a href="https://docs.sidestore.io/zh/docs/intro">https://docs.sidestore.io/zh/docs/intro</a></li><li><a href="https://sidestore.io/#get-started">https://sidestore.io/#get-started</a></li><li><a href="https://livecontainer.github.io/zh-CN/docs/intro">https://livecontainer.github.io/zh-CN/docs/intro</a></li><li><a href="https://github.com/LiveContainer/LiveContainer">https://github.com/LiveContainer/LiveContainer</a></li><li><a href="https://zhuanlan.zhihu.com/p/1906028906898786136">https://zhuanlan.zhihu.com/p/1906028906898786136</a></li><li><a href="https://www.bilibili.com/opus/978121704634056721">https://www.bilibili.com/opus/978121704634056721</a></li><li><a href="https://support.apple.com/zh-cn/102361">https://support.apple.com/zh-cn/102361</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> IOS折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保姆级教程 </tag>
            
            <tag> IOS折腾 </tag>
            
            <tag> 搞机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 侧载新选择！SideStore+LiveContainer，纯净无广，无限安装软件！！！</title>
      <link href="/posts/5a0d/"/>
      <url>/posts/5a0d/</url>
      
        <content type="html"><![CDATA[<p>还在用牛蛙助手 &#x2F; NB 广告助手吗？别用那玩意了，吃相难看还限制安装 app 数量，按照此教程正确安装 SideStore 和 LiveContainer，你就可以无限安装 &#x2F; 多开软件，不受 Apple 的 3 软件数量限制</p><blockquote><p>本文已过时，请 <a href="/posts/801b/"> 看新一篇</a>，使用了 LiveContainer 二合一版本，可以少占用个签名空位，获取配置文件使用图形化界面，操作更顺畅~</p></blockquote><h2 id="名词解释"><a href="# 名词解释" class="headerlink" title="名词解释"></a>名词解释 </h2><h3 id="SideStore 是啥？"><a href="#SideStore 是啥？" class="headerlink" title="SideStore 是啥？"></a>SideStore 是啥？</h3><p><a href="https://sidestore.io/">SideStore</a> 是一款 iOS 应用程序，可简化将应用程序侧载到设备的过程。支持 iOS14–iOS26，<strong>所有设备无需越狱 </strong>。这是<a href="https://altstore.io/">AltStore</a> 的一个分支，安装 <a href="https://sidestore.io/">SideStore</a> 后，<strong>可以实现当手机连接任意 WiFi 时就可以自签，无需电脑</strong>。</p><h3 id="LiveContainer 又是啥？"><a href="#LiveContainer 又是啥？" class="headerlink" title="LiveContainer 又是啥？"></a>LiveContainer 又是啥？</h3><p>LiveContainer 是一个无需实际安装即可运行 iOS 应用程序的应用程序启动器！</p><ul><li>它允许您在其中运行 iOS 应用程序。</li><li>允许您安装无限的应用程序（3 个应用程序 &#x2F;10 个应用程序 ID 免费开发人员帐户限制不适用于此处！），可以安装多个版本的应用程序和多个数据容器。</li><li>当 JIT 可用时，将完全绕过 codesign，无需在安装前对应用进行签名。否则，应用将使用 LiveContainer 使用的相同证书进行签名。</li></ul><h2 id="准备工作"><a href="# 准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>搭载 Windows 10 及以上系统的 x86_64 电脑（Linux 推荐使用 VirtualBox 安装 win11 并安装 usb 直通插件）</li><li>一部 iPhone</li><li>一个美区的 Apple ID（无须充值或绑定信用卡）</li><li>AltServer 安装包（<a href="https://cdn.altstore.io/file/altstore/altinstaller.zip">点我即可下载</a>）</li><li>AltServer 支持 iCloud（<a href="https://updates.cdn-apple.com/2020/windows/001-39935-20200911-1A70AA56-F448-11EA-8CC0-99D41950005E/iCloudSetup.exe">点我即可下载</a>）</li><li>JitterbugPair 程序（<a href="https://github.com/osy/Jitterbug/releases/download/v1.3.1/jitterbugpair-win64.zip">点我即可下载</a>）</li><li>SideStore IPA 安装包（<a href="https://github.com/sidestore/sidestore/releases/latest/download/sidestore.ipa">点我即可下载</a>）</li><li>LiveContainerIPA 安装包（<a href="https://github.com/LiveContainer/LiveContainer/releases/latest/download/LiveContainer.ipa">点我即可下载</a>）<blockquote><p>如果你已安装 Microsoft Store 版本的 iCould&#x2F;iTunes，请卸载它。</p></blockquote></li></ul><h2 id="开始教程"><a href="# 开始教程" class="headerlink" title="开始教程"></a>开始教程 </h2><p> 可以配合视频食用😋：<a href="https://www.bilibili.com/video/BV1SxbizGE1w">https://www.bilibili.com/video/BV1SxbizGE1w</a></p><h3 id="安装 AltStore"><a href="# 安装 AltStore" class="headerlink" title="安装 AltStore"></a>安装 AltStore</h3><p>记得先安装<strong>AltServer 支持 iCloud</strong>，这俩都没啥讲究，一路下一步就行，需要注意的是如果你已安装 Microsoft Store 版本的 iCould&#x2F;iTunes，请卸载它。</p><h3 id="使用 AltStore 安装 SideStore"><a href="# 使用 AltStore 安装 SideStore" class="headerlink" title="使用 AltStore 安装 SideStore"></a>使用 AltStore 安装 SideStore</h3><ol><li>把你的手机插上电脑</li><li>去资源管理器托盘栏找到一个棱形图标,Shift+ 左键 戳他</li><li>鼠标移动到 <code>Sideload .ipa</code> 点击你的设备名，选择上面下载的<strong>SideStore IPA</strong>，这时候会弹出窗口要你输入你的 Apple ID 和密码，放心输入，完了验证一下，稍等片刻你的手机桌面上就有 SideStore app 了（这时候先不要打开它）</li></ol><h3 id="使用 JitterbugPair 获取设备文件"><a href="# 使用 JitterbugPair 获取设备文件" class="headerlink" title="使用 JitterbugPair 获取设备文件"></a>使用 JitterbugPair 获取设备文件</h3><ol><li>解压上面下载的<strong>JitterbugPair 程序</strong></li><li>打开解压的文件夹，在上方地址栏输入<code>cmd</code>，然后回车</li><li>然后在 cmd 里执行<code>jitterbugpair.exe</code></li><li>此时手机上可能会提示允许链接，允许一下</li><li>当前文件夹下会产生一个<code>[UDID].mobiledevicepairing</code></li><li>使用各种文件传输工具把文件传输到你的 iPhone 上（推荐<a href="https://localsend.org/zh-CN/download">LocalSend</a>）</li></ol><h3 id="传输必要文件"><a href="# 传输必要文件" class="headerlink" title="传输必要文件"></a>传输必要文件 </h3><p> 把<strong>LiveContainerIPA 安装包 </strong> 和上一步中的 <code>[UDID].mobiledevicepairing</code> 传输到你的 iPhone 上</p><h3 id="安装 StosVPN"><a href="# 安装 StosVPN" class="headerlink" title="安装 StosVPN"></a>安装 StosVPN</h3><ol><li>在你的 iPhone 的 appstore 中登录你的美区 Apple ID</li><li>搜索并下载<a href="https://apps.apple.com/us/app/stosvpn/id6744003051">StosVPN</a></li></ol><h3 id="配置 SideStore"><a href="# 配置 SideStore" class="headerlink" title="配置 SideStore"></a>配置 SideStore</h3><ol><li>打开并启动连接 StosVPN</li><li>打开 SideStore</li><li>默认弹出窗口选是，进入文件，选择上面步骤获得的 <code>[UDID].mobiledevicepairing</code>（如果你不小心选错了或没弹出可以点<code>Settings</code>-&gt;<code>Reset Pairing File</code> 然后大退 app 重选）</li></ol><h3 id="安装 LiveContainer"><a href="# 安装 LiveContainer" class="headerlink" title="安装 LiveContainer"></a>安装 LiveContainer</h3><ol><li>打开并启动连接 StosVPN</li><li>打开 SideStore</li><li>点击底部<code>My Apps</code>，选择左上角➕，选择上面下载的<strong>LiveContainerIPA 安装包</strong></li></ol><h3 id="配置 LiveContainer"><a href="# 配置 LiveContainer" class="headerlink" title="配置 LiveContainer"></a>配置 LiveContainer</h3><ol><li>点击 <code> 设置 </code>，点击<code> 安装证书 </code>，点击<code> 给 SideStore 打补丁 </code> 并按照提示选择</li></ol><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="如何安装软件"><a href="# 如何安装软件" class="headerlink" title="如何安装软件"></a>如何安装软件 </h3><p> 打开 LiveContainer，选中 App 页，点击上方➕，选择需要安装的 IPA 文件即可</p><h3 id="如何安装 - 注入插件"><a href="# 如何安装 - 注入插件" class="headerlink" title="如何安装 &#x2F; 注入插件"></a>如何安装 &#x2F; 注入插件 </h3><p> 打开 LiveContainer，选中插件页，点击上方➕，选择需要安装的插件文件即可，可以创建文件夹来给 app 单独注入插件</p><h2 id="后日谈"><a href="# 后日谈" class="headerlink" title="后日谈"></a>后日谈 </h2><p> 相信你看完这篇文章已经学会如何正确安装并使用 SideStore 和 LiveContainer 了，下下篇 <strong> 进阶篇 </strong> 将教你如何配置 JIT 服务来愉快游玩例如 Amethyst（PojavLauncher IOS）这样需要 JIT 权限的模拟器 &#x2F; 启动器</p><hr><h2 id="参考资料（排名不分前后）"><a href="# 参考资料（排名不分前后）" class="headerlink" title="参考资料（排名不分前后）"></a>参考资料（排名不分前后）</h2><ul><li><a href="https://docs.sidestore.io/zh/docs/intro">https://docs.sidestore.io/zh/docs/intro</a></li><li><a href="https://sidestore.io/#get-started">https://sidestore.io/#get-started</a></li><li><a href="https://livecontainer.github.io/zh-CN/docs/intro">https://livecontainer.github.io/zh-CN/docs/intro</a></li><li><a href="https://github.com/LiveContainer/LiveContainer">https://github.com/LiveContainer/LiveContainer</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> IOS折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保姆级教程 </tag>
            
            <tag> IOS折腾 </tag>
            
            <tag> 搞机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始使用 Hexo 框架搭建属于你的博客（一）环境准备篇</title>
      <link href="/posts/e305/"/>
      <url>/posts/e305/</url>
      
        <content type="html"><![CDATA[<p>在上一篇「准备篇」中，我们已经聊过了搭建博客的动机、Hexo 是什么、适合谁用、以及部署的大致方向。这篇教程将正式带你动手，从最基础的环境配置开始，为你的 Hexo 博客打好地基。</p><blockquote><p>注意：本片教程基于 Arch Linux，大多动作通用，遇到不通用的地方我会列出常见发行版的对应命令，要是发现没列出你使用的发行版命令建议自行 <a href="https://www.bing.com/">必应</a> or <a href="https://www.google.com/">Google</a> 或者 <a href="https://chatgpt.com/">ChatGPT</a> or <a href="https://deepseek.com/">DeepSeek</a>，不要使用百度！！！</p></blockquote><h2 id="准备阶段"><a href="# 准备阶段" class="headerlink" title="准备阶段"></a>准备阶段 </h2><h3 id="安装 VSCode"><a href="# 安装 VSCode" class="headerlink" title="安装 VSCode"></a> 安装 VSCode</h3><div class="tabs" id="安装 vscode"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装 vscode-1">Arch</button><button type="button" class="tab" data-href="安装 vscode-2">Ubuntu/Debian</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装 vscode-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S visual-studio-code-bin</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="安装 vscode-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install software-properties-common apt-transport-https curl</span><br><span class="line">wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</span><br><span class="line">sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/</span><br><span class="line">rm microsoft.gpg</span><br><span class="line">sudo sh -c &#x27;echo &quot;deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main&quot; &gt; /etc/apt/sources.list.d/vscode.list&#x27;</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install code</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="安装 Node-js-and-npm"><a href="# 安装 Node-js-and-npm" class="headerlink" title="安装 Node.js and npm"></a>安装 Node.js and npm</h3><div class="tabs" id="安装 node.js、npm"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装 node.js、npm-1">Arch</button><button type="button" class="tab" data-href="安装 node.js、npm-2">Ubuntu/Debian</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装 node.js、npm-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S nodejs npm</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="安装 node.js、npm-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nodejs npm</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="安装 Git"><a href="# 安装 Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><div class="tabs" id="安装 git"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装 git-1">Arch</button><button type="button" class="tab" data-href="安装 git-2">Ubuntu/Debian</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装 git-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S git</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="安装 git-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="初始化 -Hexo- 项目"><a href="# 初始化 -Hexo- 项目" class="headerlink" title="初始化 Hexo 项目"></a>初始化 Hexo 项目 </h2><p> 完成以上环境后，就可以初始化本地 Hexo 项目了！</p><h3 id="安装 Hexo-CLI"><a href="# 安装 Hexo-CLI" class="headerlink" title="安装 Hexo CLI"></a>安装 Hexo CLI</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>执行完成后，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>确认是否成功安装。</p><h3 id="创建博客文件夹"><a href="# 创建博客文件夹" class="headerlink" title="创建博客文件夹"></a>创建博客文件夹</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir my-blog</span><br><span class="line">cd my-blog</span><br></pre></td></tr></table></figure><h3 id="初始化 Hexo"><a href="# 初始化 Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="编译启动 Hexo"><a href="# 编译启动 Hexo" class="headerlink" title="编译启动 Hexo"></a>编译启动 Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo generate</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/img/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Hexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/1/jietu/localhost4000.png" alt="shell 显示如上即成功"></p><p>随后浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a></p><p><img src="/img/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8Hexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/1/jietu/localhost4000web.png" alt="你就可以看到你的博客页啦！"></p><h2 id="尾声"><a href="# 尾声" class="headerlink" title="尾声"></a>尾声 </h2><p> 自此，博客基础框架搭建完成，既然说了是框架了，自然要往里添东西，我们下一篇就教大家如何配置 anzhiyu 主题并个性化设置属于自己的主页等等</p><p>接下来将是系列教程内容规划：</p><ul><li>环境准备篇：安装 Hexo 所需环境，初始化本地项目；</li><li>主题配置篇：选用适合自己的主题，定制首页样式；</li><li>部署上线篇：绑定 Cloudflare Pages，首次上线；</li><li>后端服务篇：部署评论系统与访问统计；</li><li>进阶技巧篇：添加搜索功能、自定义短链、SEO 优化；</li><li>终章：暂时不透露 :)</li></ul><h2 id="参考资料（排名不分先后）"><a href="# 参考资料（排名不分先后）" class="headerlink" title="参考资料（排名不分先后）"></a>参考资料（排名不分先后）</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/392994381">https://zhuanlan.zhihu.com/p/392994381</a></li><li><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97</a></li><li><a href="https://markdown.com.cn/">https://markdown.com.cn/</a></li><li><a href="https://docs.anheyu.com/">https://docs.anheyu.com/</a></li><li><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Hexo </category>
          
          <category> 推广 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保姆级 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始使用 Hexo 框架搭建属于你的博客（零）准备篇</title>
      <link href="/posts/7e9/"/>
      <url>/posts/7e9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>🚀 你真的准备好开始搭建一个属于你自己的博客了吗？</p></blockquote><p>在这个人人都能发声、动动手指就能写文章的平台时代，我们似乎已经被微博、小红书、知乎、微信公众号等信息流平台包围。可就是在这种环境下，还有很多技术人、爱好者、甚至学生选择了自己 <strong> 搭建博客 </strong>，使用如 <strong>Hexo</strong>、<strong>Hugo</strong>、<strong>Jekyll</strong> 等<strong> 静态博客框架</strong>，写下一篇篇属于他们自己的记录。</p><p>那么问题来了：<strong>你为什么要搭建一个属于你自己的博客？你真的需要吗？</strong></p><h2 id="什么是 -Hexo？"><a href="# 什么是 -Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个基于 Node.js 的静态博客框架。它的主要特性如下：</p><ul><li><p><strong>速度快</strong>：几秒钟生成整个站点；</p></li><li><p><strong>支持 Markdown</strong>：专注于写作，无需关心复杂的 HTML；</p></li><li><p><strong>插件丰富</strong>：数百个社区插件满足各种个性化需求；</p></li><li><p><strong>主题多样</strong>：视觉风格随你挑选，从极简到炫酷；</p></li><li><p><strong>支持静态托管</strong>：可以部署在 GitHub Pages、Cloudflare Pages 等平台。</p></li></ul><p>Hexo 的核心理念是“<strong>简洁优雅，专注写作</strong>”。你不需要掌握复杂的服务器知识，不需要去操心数据库，只需三条命令，就可以生成一个完整的网站结构，随时部署上线。</p><h2 id="我为什么选择 -Hexo？"><a href="# 我为什么选择 -Hexo？" class="headerlink" title="我为什么选择 Hexo？"></a>我为什么选择 Hexo？</h2><p>在开始正式搭建之前，我们不妨先来聊聊：Hexo 到底适合怎样的人？它的优点又有哪些？</p><h3 id="优点 -✅"><a href="# 优点 -✅" class="headerlink" title="优点 ✅"></a>优点 ✅</h3><ul><li><p>完全免费、开源；</p></li><li><p>本地写作体验极佳，搭配 VSCode、Typora 等工具十分流畅；</p></li><li><p>无需数据库，纯静态 HTML，性能强悍；</p></li><li><p>高度自定义，主题插件可玩性强；</p></li><li><p>部署灵活，支持多种 CDN 与静态托管平台；</p></li><li><p>可以脱离国内主机的备案问题（部署在国外）。</p></li></ul><h3 id="缺点 -❌"><a href="# 缺点 -❌" class="headerlink" title="缺点 ❌"></a>缺点 ❌</h3><ul><li><p>相对而言，上手需要基本的命令行知识；</p></li><li><p>写作过程不像微信公众号那样“所见即所得”；</p></li><li><p>插件 &#x2F; 主题生态虽然丰富，但中文文档较少；</p></li><li><p>配置多了之后，更新维护成本会上升；</p></li><li><p>缺乏评论、搜索、统计等功能，需要第三方服务接入。</p></li></ul><h2 id="你真的需要一个博客吗？-🤔"><a href="# 你真的需要一个博客吗？-🤔" class="headerlink" title="你真的需要一个博客吗？ 🤔"></a>你真的需要一个博客吗？ 🤔</h2><p>这是我想在正式搭建之前，反问你的一个关键问题。</p><p>你是否：</p><ul><li><p>希望 <strong> 长期记录与输出 </strong> 技术文章、项目经历、学习心得？</p></li><li><p>对于“拥有一个自己的空间”有 <strong> 归属感</strong>？</p></li><li><p>不满足于平台的限制与规则，想要<strong>100% 自主可控的内容与风格</strong>？</p></li><li><p>希望拥有一个能持续积累自己个人的“作品集”？</p></li></ul><p>如果你只是偶尔写点内容发发朋友圈，或者纯粹为了流量与曝光，那也许知乎、公众号、小红书是更适合你的平台。但如果你 <strong> 看重内容的沉淀、完整性、可控性</strong>，那么 Hexo 也许是你理想的选择。</p><h2 id="我们将如何部署这个博客？"><a href="# 我们将如何部署这个博客？" class="headerlink" title="我们将如何部署这个博客？"></a>我们将如何部署这个博客？</h2><p>虽然 Hexo 是本地生成静态文件的工具，但网站要上线，仍然需要“部署”过程。我们将在接下来的教程中使用以下工具进行部署：</p><h3 id="前端：Cloudflare-Pages-or-Vercel- 负责托管静态博客页面"><a href="# 前端：Cloudflare-Pages-or-Vercel- 负责托管静态博客页面" class="headerlink" title="前端：Cloudflare Pages or Vercel 负责托管静态博客页面"></a>前端：Cloudflare Pages or Vercel 负责托管静态博客页面</h3><p>Cloudflare Pages 是 Cloudflare 提供的一种免费的静态网站托管服务。而 Vercel 同样如此</p><p>它们的优势包括：</p><ul><li><p>支持 GitHub 一键集成；</p></li><li><p>全球 CDN 加速，访问速度快；</p></li><li><p>HTTPS 自动配置，无需操心证书；</p></li><li><p>不需要绑定传统主机或服务器；</p></li><li><p>接近“零运维”体验，自动构建、自动部署。</p></li></ul><blockquote><p>为什么要双前端部署？<br>因为 Vercel 对于大陆体验更好，而 Cloudflare 服务更稳定同时海外访问更快，所以双端部署择优链接，体验 Plus++</p></blockquote><p>你只需要把 Hexo 生成的静态文件推送到 GitHub 仓库，Cloudflare 与 Vercel 就会自动构建并部署。</p><p>未来我们将一步步讲解：</p><ul><li>如何配置 Hexo 与 anzhiyu 主题</li><li>主题美化</li><li>问题解决</li><li>如何写文章</li><li>等等</li></ul><h3 id="后端：雨云 -ECS- 服务器 - 用于搭建博客后端服务"><a href="# 后端：雨云 -ECS- 服务器 - 用于搭建博客后端服务" class="headerlink" title="后端：雨云 ECS 服务器 用于搭建博客后端服务"></a>后端：<a href="https://www.rainyun.com/blxc123_">雨云 ECS 服务器 </a> 用于搭建博客后端服务</h3><p> 虽然 Hexo 本身是静态博客框架，但博客网站往往还需要：</p><ul><li><p>评论系统（如 Waline、Twikoo）；</p></li><li><p>访问统计（如 Umami、Plausible）；</p></li><li><p>搜索服务、图床、Webhook 等；</p></li></ul><p>这些都需要一个运行环境，我们将选用 <a href="https://www.rainyun.com/blxc123_"> 雨云 </a> 的轻量 ECS 服务器来托管这些后端服务。<a href="https://www.rainyun.com/blxc123_">雨云 </a> 价格便宜、带宽较充足，非常适合个人使用者入门部署。</p><p>未来我们将一步步讲解：</p><ul><li>如何配置 Twikoo 评论系统</li><li>如何配置 Umami 访问统计</li><li>如何配置 简易朋友圈后端</li><li>……</li></ul><h2 id="在开始之前，你需要准备什么？"><a href="# 在开始之前，你需要准备什么？" class="headerlink" title="在开始之前，你需要准备什么？"></a>在开始之前，你需要准备什么？</h2><p>在进入第一篇搭建教程前，你需要具备以下几点：</p><ul><li><p>一台可以上网的电脑（推荐使用 macOS 或 Linux 系统，<strong>后续教程不会考虑 Windows！！！</strong>）；</p></li><li><p>一点点命令行操作基础（不难，后面都会手把手教）；</p></li><li><p>一个 GitHub 账号；</p></li><li><p>（推荐）一个自己的域名，可以绑定博客域名（只要能正确配置 A 与 CNAME 就可以）；</p></li><li><p>大约每月 ¥80 的资金</p></li><li><p>一点点对折腾的热情 ❤️</p></li></ul><h2 id="教程预告"><a href="# 教程预告" class="headerlink" title="教程预告"></a>教程预告 </h2><p> 这是“Hexo 搭建博客”系列的 <strong> 准备篇 </strong>，我们不会在本文涉及任何代码或搭建流程，而是希望你在动手之前<strong> 认真思考动机与目的</strong>。</p><p>接下来将是系列教程内容规划：</p><ul><li><p>环境准备篇：安装 Hexo 所需环境，初始化本地项目；</p></li><li><p>主题配置篇：选用适合自己的主题，定制首页样式；</p></li><li><p>部署上线篇：绑定 Cloudflare Pages，首次上线；</p></li><li><p>后端服务篇：部署评论系统与访问统计；</p></li><li><p>进阶技巧篇：添加搜索功能、自定义短链、SEO 优化；</p></li><li><p>终章：暂时不透露 :)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Hexo </category>
          
          <category> 推广 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保姆级 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arch Linux+Hyprland 从安装到使用只需这一篇（保姆级喂饭超全教程）</title>
      <link href="/posts/ae3/"/>
      <url>/posts/ae3/</url>
      
        <content type="html"><![CDATA[<h1 id="开始前叠甲"><a href="# 开始前叠甲" class="headerlink" title="开始前叠甲"></a>开始前叠甲</h1><blockquote><p>第一次写博客，我尽量写好写全。 </p></blockquote><p>本次教程采用 <code>archinstall</code> 脚本极简安装，<code>archinstall</code>相当于 ArchLinux 的安装向导，可以通过简单设置就完成 Arch Linux 的安装。由于 <code>Archinstall</code> 脚本至今仍在更新完善，因此所有相关教程的时效性都非常短，不同教程之间差异会非常大，建议以最新教程为准。</p><p>原则上此前没有使用过 Arch 及其延伸发行版用户不应该利用 Archinstall 逃课，但是规范化的安装可以让新用户避免很多灾难性的后果。至于代价，等遇上问题再说吧。本教程只能确保你能用上 arch 并且完全按教程配置完后能直接开始用。</p><p>最后开始前，请确保你手里有一个良好的 <strong>“魔法”</strong> 这点 <strong> 及其重要 </strong>，否则在后续安装 &#x2F; 配置过程中会因为<strong> 网络问题 </strong> 而产生很多 <strong> 奇奇怪怪的问题！！！</strong></p><h2 id="准备阶段"><a href="# 准备阶段" class="headerlink" title="准备阶段"></a>准备阶段 </h2><h3 id="硬件部分"><a href="# 硬件部分" class="headerlink" title="硬件部分"></a> 硬件部分</h3><ul><li>一台用来安装 arch 的 x86 电脑（需要有 <strong> 一整块 </strong> 空白的 <strong> 硬盘 </strong> 用于安装，<strong>单盘双系统此教程不适合你！！！</strong>）</li><li>一个 16G 以上的 U 盘</li></ul><h3 id="软件部分"><a href="# 软件部分" class="headerlink" title="软件部分"></a>软件部分</h3><ul><li>一份打包好的必要文件：<a href="https://github.com/mcxiaochenn/mcxiaochenn/raw/refs/heads/main/files/blogfile/%E4%B8%80%E4%BB%BD%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84%E5%BF%85%E8%A6%81%E6%96%87%E4%BB%B6.tar.gz">点我下载此文件</a></li><li>Ventoy：<a href="https://www.ventoy.net/cn/download.html">点我下载此文件</a></li><li>Arch Linux 安装镜像：<a href="https://mirrors.aliyun.com/archlinux/iso/latest/archlinux-x86_64.iso">点我下载此文件 </a>（使用阿里云镜像站速度有保障，还是慢推荐使用<code>IDM</code>、<code>NDM</code> 这样的多线程下载工具）</li></ul><h2 id="配置 U 盘"><a href="# 配置 U 盘" class="headerlink" title="配置 U 盘"></a>配置 U 盘 </h2><h3 id="安装 Ventoy"><a href="# 安装 Ventoy" class="headerlink" title="安装 Ventoy"></a> 安装 Ventoy</h3><ol><li>插入你的 U 盘</li><li>解压并打开<code>Ventoy2Disk</code></li><li>确认选中的是你的 U 盘 <strong> 点击安装 </strong> 即可</li></ol><h3 id="拷入文件"><a href="# 拷入文件" class="headerlink" title="拷入文件"></a>拷入文件 </h3><p> 把之前下载的 <strong>Arch Linux 安装镜像</strong> 和<strong>一份打包好的必要文件 </strong> 考到资源管理器中名字为 <code>Ventoy</code> 的分区</p><h2 id="安装 Arch-Linux 篇"><a href="# 安装 Arch-Linux 篇" class="headerlink" title="安装 Arch Linux 篇"></a>安装 Arch Linux 篇 </h2><h3 id="进入 Ventoy"><a href="# 进入 Ventoy" class="headerlink" title="进入 Ventoy"></a> 进入 Ventoy</h3><p>确认文件已经拷到 U 盘里后重启 狂按 <code>F8</code> 并选择从<strong>USB 启动</strong>（这里不同电脑可能不一样）我从网上找了张表，各位对照试试：</p><details class="folding-tag"><summary> 各品牌主板、笔记本、台式机的 U 盘启动快捷热键大全对照图表 </summary>              <div class='content'>              <p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/%E5%90%84%E5%93%81%E7%89%8C%E4%B8%BB%E6%9D%BF%E3%80%81%E7%AC%94%E8%AE%B0%E6%9C%AC%E3%80%81%E5%8F%B0%E5%BC%8F%E6%9C%BA%E7%9A%84U%E7%9B%98%E5%90%AF%E5%8A%A8%E5%BF%AB%E6%8D%B7%E7%83%AD%E9%94%AE%E5%A4%A7%E5%85%A8%E5%AF%B9%E7%85%A7%E5%9B%BE%E8%A1%A8.png" alt="各品牌主板、笔记本、台式机的 U 盘启动快捷热键大全对照图表"></p>              </div>            </details><p>如果你前面的步骤都没问题那你应该会看到类似这样的界面</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/boot_ventoy.png" alt="我的 ventoy 有主题美化，但大差不差"></p><h3 id="进入 ArchLinux-Live 镜像"><a href="# 进入 ArchLinux-Live 镜像" class="headerlink" title="进入 ArchLinux Live 镜像"></a>进入 ArchLinux Live 镜像 </h3><p> 此时使用键盘上下键选择你下载的 <strong>arch.iso</strong> 镜像并回车</p><p>选择第一项并按下回车：</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/arch-install.png" alt="选择第一个就行"></p><p>等待一会儿跑码后会来到 Arch 的安装环境：</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/arch-installui.png" alt="彩条上面是操作指引，如果你英语还不错推荐按照官方流程手动安装，在此过程中可能帮你加深对于 Linux 的理解，后续出现问题也更好解决"></p><p>由于 Archinstall 脚本需要联网检查版本，所以必须 <strong> 保证连接网络</strong>。理论上有线网络只要插上它就会自己连接。（嗯，理论上。。。如果你的网卡过于冷门可能没驱动。。。那教程不具有通用性建议百度自行解决。。。）</p><h3 id="以下是连接无线网络的办法（如果能驱动起来的话。。。）："><a href="# 以下是连接无线网络的办法（如果能驱动起来的话。。。）：" class="headerlink" title="以下是连接无线网络的办法（如果能驱动起来的话。。。）："></a>以下是连接无线网络的办法（如果能驱动起来的话。。。）：</h3><ol><li><strong>检查网卡设备</strong>：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwctl device list</span><br></pre></td></tr></table></figure><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall-wifi.png" alt="我台式机没无线网卡所以是空的"></p><ol start="2"><li><strong>连接网络</strong>：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwctl station [刚才搜出来的 Name 下面的网卡名（一般是 wlan0）] connect [你的 WIFI 名（不能是中文！！！）]</span><br></pre></td></tr></table></figure><p>然后输入密码并回车即可</p><h3 id="正式 archinstall 安装"><a href="# 正式 archinstall 安装" class="headerlink" title="正式 archinstall 安装"></a>正式 archinstall 安装 </h3><p> 简单讲一下脚本内的操作，方向键上下控制选项，空格为勾选，回车为选中并确认，Esc 为退出。</p><p>输入命令启动脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">archinstall</span><br></pre></td></tr></table></figure><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall-ui.png" alt="Archinstall 的主界面"></p><p>接下来我们逐步一行一行进行讲解、设置，完成安装。</p><ol><li><strong>语言</strong>：语言部分不需要进行修改。</li><li><strong>Locales（本地化）</strong>：这里可以先把语言改了，缺点是后续进系统会有好多 <code> 囗囗囗</code>（因为没字体）照做就行后续会下载字体</li></ol><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/locales/Locale%20language.png" alt="进入后选择 Locale language 并回车"></p><p>会出现眼花缭乱一堆选项，我们直接输入<code>/zh_cn</code>（斜杠不要落下）</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/locales/set-cn.png" alt="就会变成这样"></p><p>这时我们选中下面的 <code>zh_CN.UTF-8</code> 并回车返回即可</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/locales/set-info.png" alt="右侧 Info 框内为当前的设置信息"></p><ol start="3"><li><strong>Mirrors or repositories（镜像源与包）</strong>：这里新版本合并了，5 月份还是分开的可见更新之频繁。让我们拆开来设置</li></ol><p><em><strong>Mirrors</strong></em>： 镜像源可以认为是提供下载的渠道，但是他们不一定是官方的。大多数镜像源依靠第三方提供和维护，用于缓解网络问题。镜像源按回车进入，选择第一项 <code>Select region</code>，在列表中选择<code>China</code>（同样可以用<code>/</code> 进行快速搜索）。</p><blockquote><p>注意，在选择“Mirror region”时可能会出现卡顿，这是脚本在搜索镜像源，按一下等列表出来就好，否则你会选成“Alabania”。</p></blockquote><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/Mirrors/Mirrors-set.png" alt="如果还需要使用其它地区的镜像，按空格即可勾选"></p><p><em><strong>repositories</strong></em>：这里可以选择常见仓库，推荐把 multilib 勾选上</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/Mirrors/repositories-set.png" alt="我们选这个选项进去"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/Mirrors/multilib.png" alt="推荐把 multilib 勾选上"></p><ol start="4"><li>Disk configuration（硬盘配置）：也就是给硬盘分区。<strong>这是非常危险的一步，每一个操作一定小心谨慎，一旦失误不可挽回。请确保需要安装的硬盘中没有任何数据，这一步会清除掉硬盘上的所有数据。如果是准备在一个硬盘中同时安装多个系统则不应该使用 Archinstall。</strong></li></ol><p>选择硬盘配置后点击“Partitioning”，之后如果想使用默认设置就选择“Use a best-effort default partition layout”，想自己调整就选“Manual Partitioning”，本教程只介绍默认设置。选好后进入下图界面</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/disk/configuration.png" alt="这里选择需要分区的硬盘，同样可以使用空格勾选多个硬盘进行分区"></p><p>选好硬盘后再选择文件系统格式：</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/disk/filesys.png" alt="文件系统只能选择其中一种且后续不方便更换"></p><ul><li><strong>Btrfs</strong>：支持快照压缩，适合备份，但随机写入慢。</li><li><strong>Ext4</strong>：稳定通用，适合数据库，缺乏高级功能。</li><li><strong>XFS</strong>：大文件性能强，适合云存储，小文件一般。</li><li><strong>F2FS</strong>：专为 SSD 优化，写入快，传统硬盘不推荐。</li></ul><p><strong>文件系统之间没有好坏之分，请选择适合自己的文件系统！</strong></p><p>个人偏向 <strong>Ext4</strong> 和<strong>XFS</strong>，故此次教程以 <strong>Ext4</strong> 为例：</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/disk/filesysok.png" alt="选中后回车"></p><blockquote><p>正常来说选择完还有一个问你是否单独为 <code>/home</code> 创建分区，推荐选 <code>no</code>，本人有遇到过 <strong> 根目录爆满 home 目录，占用不到 40%</strong> 的尴尬情况，扩容又容易出事，干脆直接合并，省心。</p></blockquote><ol start="6"><li><p>交换区（Swap）：<strong>保持默认即可</strong></p></li><li><p>启动引导（Bootloader）：启动引导负责开机时引导电脑载入操作系统，一般 <strong> 保持不动就好</strong>。</p></li><li><p>统一内核镜像（Unified kernel images）：它会把一些启动系统需要的东西全部打包在一起，这样就能进行统一的签名和认证，一般 <strong> 保持默认即可</strong>。</p></li><li><p>主机名 (Hostname)：和 Windows 的主机名一样，给机器起名字，<strong> 可以改一下</strong>。</p></li><li><p>超级管理密码（Root password）：超级管理员（root）账户的密码，拥有系统的最高权限，相当于 Windows 中的管理员，但是权限要更加大得多。<strong>注意，如果不设置密码则没有超级管理员账户，会在很大程度上受到限制 (安卓手机所谓的 Root 就是为了获得最高管理员的控制权)。</strong> <em><strong> 记得设置！！！</strong></em></p></li><li><p>用户账户（User account）：管理用户账户，<strong>一定要创建一个基本的账户，否则只有 root 用户很容易造成事故</strong>。</p></li></ol><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/user/adduser.png" alt="选“Add a user”创建一个账户"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/user/addusers.png" alt="设置用户名"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/user/setuserpasswd.png" alt="设置密码（要输两遍哦）"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/user/addusersok.png" alt="是否要给此账户 root 权限，取决于你自己"></p><p>然后点<code>Confirm and exit</code></p><ol start="12"><li>配置（Profile）：这次带大家装 <code>Hyprland</code> 自然是选 <code>Desktop</code> 环境辣</li></ol><p>选择路线：<code>Profile</code> –&gt; <code>Type</code> –&gt; <code>Desktop</code> –&gt; <code>Hyprland</code> –&gt; <code>polkit</code></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/profile/hyprland.png" alt="Hyprland"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/profile/access.png" alt="Seat access"></p><p>显卡驱动（n 卡）：<code>Graphics driver</code> –&gt; <code>Nvidia（proprietary）</code></p><p>其他用户：根据显卡的品牌来选择就好</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/profile/xkqd.png" alt="显卡驱动"></p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/profile/fknv.png" alt="n 卡推荐使用闭源驱动体验更佳"></p><ol start="13"><li><p>音频（Audio）: 音频管理工具，新电脑建议选<code>pipewire</code>。</p></li><li><p>内核（Kernels）：Linux 有几个不同特性的内核供你选择，主要区别在于：</p></li></ol><ul><li><strong>Linux</strong>：最新功能，适合测试，稳定。</li><li><strong>Linux-hardened</strong>：强化安全，兼容性受限，适合高安全需求。</li><li><strong>Linux-lts</strong>：长期支持，稳定可靠，适合生产环境。</li><li><strong>Linux-zen（推荐）</strong>：低延迟优化，适合桌面 &#x2F; 高性能环境。</li></ul><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/kernelset.png" alt="按空格键选中 &#x2F; 取消（别忘了把原版内核取消勾选不然会有多个内核）"></p><ol start="15"><li>网络配置（Network configuration）：选最下面的 <code> 使用网络管理器</code></li></ol><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/networkset.png" alt="从上往下分别是“复制当前网路配置”“自己配置”“使用网络管理器”"></p><ol start="16"><li><p>添加包（Additional packages）：跳过，要装可以等系统配置完再按需安装。</p></li><li><p>时区（Timezone）: 中国时区选择“Asia&#x2F;Shanghai”。</p></li></ol><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/timezone.png" alt="同样可以利用“&#x2F;”快速选择"></p><ol start="18"><li>自动时间同步：默认启用，不用动。</li></ol><p>终于！设置完了，现在你可以选择 <code>install</code> 然后 <strong> 坐和放宽</strong>，起身去喝杯茶 :)</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/install.png" alt="开始安装！！！"></p><h3 id="archinstall 安装完成"><a href="#archinstall 安装完成" class="headerlink" title="archinstall 安装完成"></a>archinstall 安装完成</h3><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/archinstall/installover.png" alt="等你回来要是看到这个界面就代表一切正常，你已经成功把 arch 安装进你的电脑"></p><p>接下来选择 <code>Reboot system</code> 等待重启即可进入 arch！</p><h2 id="修复破碎的字体并安装基本依赖"><a href="# 修复破碎的字体并安装基本依赖" class="headerlink" title="修复破碎的字体并安装基本依赖"></a>修复破碎的字体并安装基本依赖</h2><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/inarch/sddm.png" alt="重启后如果显卡驱动工作正常的话你会来到这个界面"></p><blockquote><p>原谅我，不想重装系统 <strong> 虚拟机下 Hyprland 跑不起来</strong>, 接下去一段可能没图了，但我会尽量把步骤给讲清楚。</p></blockquote><p>输入你设置对应用户的密码并登录，然后你就会来到一个非常干净只有一张壁纸的界面</p><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/hyprland/bizhi/bizhi1.png" alt="主题样例"></p><p>恭喜你，Hyprland 在你的设备上工作正常！🎉🎉🎉</p><h3 id="正式开始"><a href="# 正式开始" class="headerlink" title="正式开始"></a>正式开始</h3><ol><li><p>按下<strong>Super</strong>（也就是 win 键，键盘左下角 CTRL 和 ALT 之间的那个按键）+<strong>E</strong>，打开资源管理器（姑且这么叫吧，感觉亲切一点）。</p></li><li><p>挂载 U 盘并打开我之前分享的 <code> 一份打包好的必要文件</code></p></li><li><p>按 <strong>Super</strong>+<strong>Q</strong> 打开<strong>kitty 终端</strong>，输入</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [文件的绝对路径]</span><br></pre></td></tr></table></figure><blockquote><p>教一个小妙招，可以把文本文件按住鼠标左键拖进终端，然后回车即可，不用手打路径。<strong>文本文件里面是在你用上浏览器之前需要输入的所有命令。</strong></p></blockquote><ol start="4"><li>把鼠标指针移动到 <strong> 资源管理器 </strong> 上按 <strong>Super</strong>+<strong>C</strong> 关闭，然后按 <strong>Super</strong>+<strong>Q</strong> 再打开一个<strong>kitty 终端</strong></li></ol><h3 id="添加非官方源"><a href="# 添加非官方源" class="headerlink" title="添加非官方源"></a>添加非官方源 </h3><p> 在<code>sudo nano /etc/pacman.conf</code>末尾加入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">清华源 </span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"> 中科大源 </span></span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 阿里源</span></span><br><span class="line">Server = https://mirrors.aliyun.com/archlinuxcn/$arch</span><br></pre></td></tr></table></figure><h3 id="导入 -archlinuxcn-key"><a href="# 导入 -archlinuxcn-key" class="headerlink" title="导入 archlinuxcn key"></a>导入 archlinuxcn key</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h3 id="安装 yay-base-devel"><a href="# 安装 yay-base-devel" class="headerlink" title="安装 yay  base-devel"></a>安装 yay  base-devel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy yay base-devel</span><br></pre></td></tr></table></figure><h3 id="安装中文字体"><a href="# 安装中文字体" class="headerlink" title="安装中文字体"></a>安装中文字体</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-extra noto-fonts-emoji ttf-dejavu ttf-liberation</span><br></pre></td></tr></table></figure><h3 id="结束"><a href="# 结束" class="headerlink" title="结束"></a>结束 </h3><p> 记得执行 <code>reboot</code> 确保操作生效！</p><h2 id="配置 Hyprland 主题（HyDE）"><a href="# 配置 Hyprland 主题（HyDE）" class="headerlink" title="配置 Hyprland 主题（HyDE）"></a>配置 Hyprland 主题（HyDE）</h2><h3 id="配置魔法（很重要除非你在非大陆地区！）"><a href="# 配置魔法（很重要除非你在非大陆地区！）" class="headerlink" title="配置魔法（很重要除非你在非大陆地区！）"></a>配置魔法（很重要除非你在非大陆地区！）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S clash-verge-rev-bin</span><br></pre></td></tr></table></figure><p>安装完成后去终端输入 <code>clash-verge</code> 启动，因为 <strong> 还没安装 HyDE 导致无法弹窗提权 </strong>，需要在终端手动授权 sudo，具体配置就不多讲了，记得打开<strong> 系统代理 </strong> 和<strong>虚拟网卡 </strong> 双模式，<strong>安装虚拟网卡驱动 </strong> 时也 <strong> 需要在终端输入一遍账户密码</strong></p><h3 id="HyDE 安装方法 1（推荐）："><a href="#HyDE 安装方法 1（推荐）：" class="headerlink" title="HyDE 安装方法 1（推荐）："></a>HyDE 安装方法 1（推荐）：</h3><p>使用我的 <a href="https://github.com/mcxiaochenn/HyDE-Helper">HyDE-Helper</a> 项目一行命令完成安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSL https://github.com/mcxiaochenn/HyDE-Helper/raw/refs/heads/main/shell/master/HyDE-install.sh)&quot;</span><br></pre></td></tr></table></figure><p>后续更新：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &quot;$(curl -fsSL https://github.com/mcxiaochenn/HyDE-Helper/raw/refs/heads/main/shell/master/HyDE-update.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="HyDE 安装方法 2："><a href="#HyDE 安装方法 2：" class="headerlink" title="HyDE 安装方法 2："></a>HyDE 安装方法 2：</h3><p>参考官方步骤安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pacman -S --needed git base-devel</span><br><span class="line">git clone --depth 1 https://github.com/HyDE-Project/HyDE ~/HyDE</span><br><span class="line">cd ~/HyDE/Scripts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>后续更新：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/HyDE/Scripts</span><br><span class="line">git pull origin master</span><br><span class="line">./install.sh -r</span><br></pre></td></tr></table></figure><h3 id="HyDE 安装过程"><a href="#HyDE 安装过程" class="headerlink" title="HyDE 安装过程"></a>HyDE 安装过程 </h3><p> 安装过程中会要求提权，还有各种选项，记得盯着点，此时不能坐和放宽了，一般遇到二选一就是 <code>y</code>or<code>1</code>，这么选肯定没问题，如果你的网络环境没问题基本上 6~8 分钟结束。结束后可以别急着重启，HyDE 默认会安装<code>firefox</code> 浏览器如果你不喜欢可以重装 Edge 等浏览器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -Rns firefox #卸载火狐</span><br><span class="line">yay -S microsoft-edge-stable-bin #安装微软 Edge</span><br></pre></td></tr></table></figure><h3 id="结束 -1"><a href="# 结束 -1" class="headerlink" title="结束"></a>结束 </h3><p> 记得执行 <code>reboot</code> 确保操作生效！</p><blockquote><p>此时的你可能初见端倪，已经发现一些问题了吗？但不要着急，后续有专门一段内容教你解决问题，现在先放一放，继续完成剩下的操作。</p></blockquote><h2 id="安裝输入法"><a href="# 安裝输入法" class="headerlink" title="安裝输入法"></a>安裝输入法 </h2><h3 id="安装输入法框架"><a href="# 安装输入法框架" class="headerlink" title="安装输入法框架"></a> 安装输入法框架</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im fcitx5-rime</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="# 配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><blockquote><p><code>/etc/environment</code> 是一个系统配置文件，用于设置环境变量。这些环境变量在系统启动时被加载，并且对所有用户和进程都有效。这个文件通常用于设置全局环境变量，而不是用户特定的环境变量。</p></blockquote><p>编辑文件 <code>sudo vim /etc/environment</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fcitx5 support</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span></span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br></pre></td></tr></table></figure><blockquote><p>眼尖的你应该发现了我注释了 GTK 的实现因为 arch wiki 文章写道：Do not set <code>GTK_IM_MODULE</code> to xim globally as it affects GTK3 programs as well. XIM has various problems (such as the input method cannot input after restarting), so try not to use it. <strong>所以我注释了</strong> :)</p></blockquote><h3 id="配置 -Hyprland- 自动启动 -Fcitx5"><a href="# 配置 -Hyprland- 自动启动 -Fcitx5" class="headerlink" title="配置 Hyprland 自动启动 Fcitx5"></a>配置 Hyprland 自动启动 Fcitx5</h3><p>编辑 <code>Hyprland</code> 的用户配置文件 <code>vim ~/.config/hypr/userprefs.conf</code>，在末尾添加：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec-once = fcitx5 --replace -d</span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>-d</code> 选项表示以守护进程（daemon）方式运行。这意味着 Fcitx5 将在后台持续运行，提供输入法服务。</p></blockquote><blockquote><p><code>--replace</code> 选项的作用是如果已经有一个 Fcitx5 实例正在运行，新的实例将取代现有的实例。这可以确保只有一个 Fcitx5 实例在运行，避免多个实例同时运行导致的冲突或资源浪费。</p></blockquote><h3 id="输入法皮肤"><a href="# 输入法皮肤" class="headerlink" title="输入法皮肤"></a>输入法皮肤</h3><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/srfzs.png" alt="推荐这款高颜值，我用了好久了"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paru -S fcitx5-skin-ori-git</span><br></pre></td></tr></table></figure><p><img src="/img/Arch-Linux-Hyprland%E4%BB%8E%E5%AE%89%E8%A3%85%E5%88%B0%E4%BD%BF%E7%94%A8%E5%8F%AA%E9%9C%80%E8%BF%99%E4%B8%80%E7%AF%87%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%E5%96%82%E9%A5%AD%E8%B6%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%89/jietu/srfskinset.png" alt="生效设置"></p><h3 id="配置雾凇拼音"><a href="# 配置雾凇拼音" class="headerlink" title="配置雾凇拼音"></a>配置雾凇拼音</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.local/share/fcitx5/rime</span><br><span class="line">git clone https://github.com/iDvel/rime-ice.git</span><br><span class="line">cp -r ./rime-ice/* .</span><br><span class="line">sed -i &#x27;s/# \(- &#123; when: \(paging\|has_menu\), accept: \(comma\|period\), send: Page_\(Up\|Down\) &#125;\)/\1/&#x27; default.yaml</span><br><span class="line">sed -i &#x27;s/page_size: 5/page_size: 9/&#x27; default.yaml</span><br></pre></td></tr></table></figure><blockquote><p>这样配置完还改了 <strong> 候选词数量 </strong> 和<strong>逗号、句号翻页</strong></p></blockquote><h3 id="语言大模型"><a href="# 语言大模型" class="headerlink" title="语言大模型"></a>语言大模型 </h3><p> 肥肠好用，中文输入更准确。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.local/share/fcitx5/rime</span><br><span class="line">yay -S axel</span><br><span class="line">axel -n 32 https://github.com/amzxyz/RIME-LMDG/releases/download/LTS/wanxiang-lts-zh-hans.gram</span><br></pre></td></tr></table></figure><p>新建编辑 <code>rime_ice.custom.yaml</code> 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">patch:</span><br><span class="line">  grammar:</span><br><span class="line">    language: wanxiang-lts-zh-hans</span><br><span class="line">    collocation_max_length: 5</span><br><span class="line">    collocation_min_length: 2</span><br><span class="line">  translator/contextual_suggestions: true</span><br><span class="line">  translator/max_homophones: 7</span><br><span class="line">  translator/max_homographs: 7</span><br></pre></td></tr></table></figure><h2 id="最后来修 bug"><a href="# 最后来修 bug" class="headerlink" title="最后来修 bug"></a>最后来修 bug</h2><blockquote><p>我遇上的所有问题都写在这了，还有问题自行解决或在博客评论区留言我看到会回（都玩 Linux 了推荐自己尝试解决，锻炼独立思维）</p></blockquote><h3 id="HyDE 不显示通知 - 音量调节不显示"><a href="#HyDE 不显示通知 - 音量调节不显示" class="headerlink" title="HyDE 不显示通知 &#x2F; 音量调节不显示"></a>HyDE 不显示通知 &#x2F; 音量调节不显示 </h3><p> 是上游插件更新导致的，截止本文发布还未修复，可以使用 <code>downgrade</code> 工具降级，具体步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S downgrade</span><br><span class="line">sudo downgrade pango</span><br></pre></td></tr></table></figure><p>上下选择 <code>59</code> 并确认，安装完会问题是否加入更新排除名单，推荐 <code>y</code><br> 此事在 HyDE Issues 中亦有记载：<a href="https://github.com/HyDE-Project/HyDE/issues/905#issuecomment-3017999043">HyDE-Project&#x2F;HyDE&#x2F;#905</a></p><h3 id="xxx 软件无法输入中文"><a href="#xxx 软件无法输入中文" class="headerlink" title="xxx 软件无法输入中文"></a>xxx 软件无法输入中文 </h3><p> 在软件启动项加入 <code>--ozone-platform-hint=auto --enable-wayland-ime</code><br> 例如 Edge VSCode 这类软件可以利用 flags config 解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;--ozone-platform-hint=auto\n--enable-wayland-ime&quot; &gt; ~/.config/microsoft-edge-stable-flags.conf #edge</span><br><span class="line">echo &quot;--ozone-platform-hint=auto\n--enable-wayland-ime&quot; &gt; ~/.config/code-flags.conf #vscode</span><br></pre></td></tr></table></figure><h3 id="键盘 F1-F12 被映射为了媒体键或别的"><a href="# 键盘 F1-F12 被映射为了媒体键或别的" class="headerlink" title="键盘 F1~F12 被映射为了媒体键或别的"></a>键盘 F1~F12 被映射为了媒体键或别的 </h3><p> 这有两种情况，一种是键盘类型识别错误，修改键盘识别即可，具体操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode</span><br><span class="line">echo &quot;options hid_apple fnmode=2&quot; | sudo tee -a /etc/modprobe.d/hid_apple.conf</span><br><span class="line">mkinitcpio -P</span><br></pre></td></tr></table></figure><p>另一种情况就是 HyDE 映射了，去 <code>vim ~/.config/hypr/keybindings.conf</code> 注释对应代码 <br> 我直接把所有带 F 功能键值的代码都注释了，简单粗暴</p><h2 id="尾声"><a href="# 尾声" class="headerlink" title="尾声"></a>尾声 </h2><p> 姑且就想到那么多，没想到写博客那么费时间，我从 2025-07-15 17:57:18 开始写，现在已经是 2025-07-15 23:08:35 了，被家里人催睡觉了，明天再查漏补缺吧，今天就到这了，评论功能也没修好，有问题直接发邮箱问吧，在 <a href="https://github.com/mcxiaochenn"> 我 GitHub 主页 </a> 就有我的邮箱地址</p><p>对了，我这里有一个性价比很高的云服务商，那就是————雨云！他们家的服务不仅性价比高，还照顾小白，我准备把我博客的评论系统迁移上去，想必体验会非常不错！<a href="https://www.rainyun.com/blxc123_">点我跳转雨云官网</a></p><p>2025&#x2F;07&#x2F;17 07:30</p><p>这两天会更新如何搭建评论系统和浏览量显示！！！</p><hr><blockquote><p>写在最后：恭喜你看到这里，不出意外按照此教程你已经成功安装了 Arch Linux+Hyprland+HyDE 以及中文输入法并修复了键盘 F 功能键异常和软件无法输入中文的问题，现在你得到了一个基本可以使用的 Arch 桌面环境，但不要止步于此哦，Linux 还有更多更多等待着你去探索，在摸索中进步也是 Linux 的魅力所在，相信对其感兴趣的你会继续在探索中进步并更加喜欢计算机技术这一科目！！！</p></blockquote><h2 id="参考资料（排名不分先后）"><a href="# 参考资料（排名不分先后）" class="headerlink" title="参考资料（排名不分先后）"></a>参考资料（排名不分先后）</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/25308291469">https://zhuanlan.zhihu.com/p/25308291469</a></li><li><a href="https://linux.do/t/topic/537067">https://linux.do/t/topic/537067</a></li><li><a href="https://www.wanjiachupin.com/299.html">https://www.wanjiachupin.com/299.html</a></li><li><a href="https://www.quanxiaoha.com/linux-command/linux-install-font.html">https://www.quanxiaoha.com/linux-command/linux-install-font.html</a></li><li><a href="https://www.cnblogs.com/orochihuang/p/15193699.html">https://www.cnblogs.com/orochihuang/p/15193699.html</a></li><li><a href="https://blog.csdn.net/m0_46238775/article/details/127097605">https://blog.csdn.net/m0_46238775/article/details/127097605</a></li><li><a href="https://bbs.archlinuxcn.org/viewtopic.php?id=14347">https://bbs.archlinuxcn.org/viewtopic.php?id=14347</a></li><li><a href="https://www.ventoy.net/cn/doc_news.html">https://www.ventoy.net/cn/doc_news.html</a></li><li><a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97</a></li><li><a href="https://wiki.archlinuxcn.org/wiki/Hyprland">https://wiki.archlinuxcn.org/wiki/Hyprland</a></li><li><a href="https://www.rayalto.org/2024/02/20/archlinux-hyprland-install/">https://www.rayalto.org/2024/02/20/archlinux-hyprland-install/</a></li><li><a href="https://github.com/HyDE-Project/HyDE">https://github.com/HyDE-Project/HyDE</a></li><li><a href="https://github.com/mcxiaochenn/HyDE-Helper">https://github.com/mcxiaochenn/HyDE-Helper</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> Arch Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 保姆级 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Arch </tag>
            
            <tag> Linux </tag>
            
            <tag> Hyprland </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb/"/>
      <url>/posts/3eeb/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 尘的博客!<br>这是我的第一篇文章，同时也是一份 <strong>Markdown 渲染测试文档</strong>。  </p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><hr><p>【提示：Github 中 Front-matter 以表格形式显示】</p><h1 id="简介"><a href="# 简介" class="headerlink" title="简介"></a>简介 </h1><h2 id="文章使用方法"><a href="# 文章使用方法" class="headerlink" title="文章使用方法"></a> 文章使用方法 </h2><p> 这原本是一篇 Typora 下使用 Markdown 语法的案例实践分享，最早创建于 2021 年 11 月之前，于 2023 年 6 月大改。本篇文章使用 Markdown 标记语法编写而成，汇聚了常用 Markdown 语法标注。对于不同目标人群有不同的作用：</p><ul><li>对于 Markdown 学习者。可以获取文章源码（Github 仓库地址在下面），并使用你的本地编辑器打开。通过对比标记语言与渲染结果直接学习。如果你不喜欢这种 MarkDown 学习方式，你可以参考 GitHub 学习相关 Markdown 规范：<a href="https://docs.github.com/zh/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">基本撰写和格式语法 - GitHub 文档</a></li><li>对于其他人。这篇文章包含不同标准 Markdown 语法，你可以在任何 Markdown 编辑器打开以测试其渲染效果。<ul><li>比如说——你。你使用什么方式看到这篇文章，就了解到你所用的软件对 Markdown 语言的支持情况。如果你通过我的博客打开，那么你看到的就是 Hexo 渲染后的结果（至少目前时是这样）。</li><li>比如说——我，笔记重度依赖。我需要对比本地编辑器的渲染器与 Hexo 各类渲染器和插件对 Markdown 的支持程度，以培养合适的写作习惯，加强核心工作流的可移植性。</li></ul></li></ul><p>文章目前可预览的在线版本：</p><ul><li>Hexo 渲染网页：<a href="https://uuanqin.top/p/3c4a82e6/">Markdown 渲染测试 | 半方池水半方田 (uuanqin.top)</a>。源文件直接通过 Hexo 渲染生成的静态网页。</li><li>Github 仓库： <a href="https://github.com/uuanqin/Markdown-Grammar-Rendering-Test">https://github.com/uuanqin/Markdown-Grammar-Rendering-Test</a> 。源文件的副本，不定期与 Hexo 本地同步。</li></ul><h2 id="Markdown- 标准"><a href="#Markdown- 标准" class="headerlink" title="Markdown 标准"></a>Markdown 标准 </h2><p> 约翰·格鲁伯在 2004 年创造了 Markdown 语言，<a href="https://daringfireball.net/projects/markdown/">Daring Fireball: Markdown</a>。格鲁伯认为不应完全标准化：「不同的网站（和人们）有不同的需求。没有一种语法可以让所有人满意。[^satisfy]」</p><p>[^satisfy]: <a href="https://zh.wikipedia.org/wiki/Markdown">Markdown - 维基百科，自由的百科全书 (wikipedia.org)</a></p><p>下文将从 Commonmark、GFM 为基础分板块进行 Markdown 渲染测试。</p><p>此外，对一些 Markdown 编辑器语法进行展示。其中，本文使用的 Typora 版本为 1.8.10，Obsidian 版本为 1.6.7。</p><h1 id="基础（CommonMark）"><a href="# 基础（CommonMark）" class="headerlink" title="基础（CommonMark）"></a>基础（CommonMark）</h1><p>这一部分测试 Markdown 基础语法，参考自 <a href="https://commonmark.org/">CommonMark</a>。这部分内容的成功渲染（除了下面的段落部分）是本文结构不至于散乱的基础（比如上文的标题、超链接、列表等的正确渲染）。</p><p>（第一段）这是一个很长很长很长很长的段落。</p><p>只有隔一个空行才能分锻，有点像 Latex。</p><p>在 CommonMark 语法中这三句话是一长句的。</p><p>【提示】在 Typora、Obsidian 中是换行了，这样做是有好处的。</p><p>（第二段）这是一个很长很长很长很长的段落。</p><p>与上一段之间隔了一个空行。</p><p>（第三段）这是一个很长很长很长很长的段落。\</p><p>反斜杠也能起到换行的作用。\</p><p>【提示】Typora、Obsidian 不需要这个符号，这样做会很方便。</p><h1 id="一级标题（类 -Atx- 形式）"><a href="# 一级标题（类 -Atx- 形式）" class="headerlink" title="一级标题（类 Atx 形式）"></a>一级标题（类 Atx 形式）</h1><h2 id="二级标题（类 -Atx- 形式）"><a href="# 二级标题（类 -Atx- 形式）" class="headerlink" title="二级标题（类 Atx 形式）"></a>二级标题（类 Atx 形式）</h2><h3 id="三级标题（类 -Atx- 形式）"><a href="# 三级标题（类 -Atx- 形式）" class="headerlink" title="三级标题（类 Atx 形式）"></a>三级标题（类 Atx 形式）</h3><h1 id="一级标题（类 -Setext- 形式）"><a href="# 一级标题（类 -Setext- 形式）" class="headerlink" title="一级标题（类 Setext 形式）"></a>一级标题（类 Setext 形式）</h1><h2 id="二级标题（类 -Setext- 形式）"><a href="# 二级标题（类 -Setext- 形式）" class="headerlink" title="二级标题（类 Setext 形式）"></a>二级标题（类 Setext 形式）</h2><p>【提示】Obsidian 支持类 Setext 形式的标题，请在浏览模式下查看。</p><p><em>斜体（星号表示）</em>  <em>斜体（下划线表示）</em></p><p><strong>粗体（星号表示）</strong> <strong>粗体（下划线表示）</strong></p><blockquote><p>引言</p><blockquote><p>二级引言</p></blockquote><p>引言</p></blockquote><ul><li>无序列表 使用横线</li></ul><ul><li>无序列表 使用星号</li></ul><ol><li>有序列表 使用数字加点</li></ol><ol start="2"><li>有序列表 使用数字加右括号</li></ol><p>【提示】Obsidian 中有序列表有区别。</p><ul><li><p>网状列表</p><ol><li>元素 1</li><li>元素 2</li></ol></li><li><p>网状列表</p><ul><li>使用横线</li></ul><ul><li>使用星号</li></ul></li></ul><p><a href="http://b.org/">链接（方括号后加圆括号）</a></p><p><a href="http://b.org/">带参考的链接 1</a> 链接外文字 <a href="http://b.org/">带参考链接 2</a> 链接外文字</p><p>链接悬停提示写法：<a href="https://a.com/" title="hint">Title</a></p><p><img src="https://commonmark.org/help/images/favicon.png" alt="图片链接"></p><p><img src="https://commonmark.org/help/images/favicon.png" alt="图片链接带脚注" title="图片标题"></p><p>【提示】Obsidian 在浏览模式下正常，在编辑模式有点迷惑，这是由它们的链接特色决定的。</p><p>行内代码 <code>Inline Code</code> 行内代码（单个反引号包裹）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 代码块（三个反引号包裹）</span><br></pre></td></tr></table></figure><pre><code>代码块（四个空格开头）代码块（紧挨上一行）</code></pre><p>【提示】Obsidian 这里的代码块在浏览模式下没有区别</p><p>减号式下划线：</p><hr><p>星号式下划线：</p><hr><h1 id="GitHub-Flavored-Markdown（GFM）"><a href="#GitHub-Flavored-Markdown（GFM）" class="headerlink" title="GitHub Flavored Markdown（GFM）"></a>GitHub Flavored Markdown（GFM）</h1><p>GitHub Flavored Markdown, often shortened as GFM, is the dialect of Markdown that is currently supported for user content on GitHub.com and GitHub Enterprise.</p><h2 id="基本格式语法"><a href="# 基本格式语法" class="headerlink" title="基本格式语法"></a>基本格式语法 </h2><p> 这里只介绍 <a href="https://docs.github.com/zh/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax">基本撰写和格式语法 - GitHub 文档</a> 提及的规范。</p><p>与 CommonMark 对比新增了以下语法：</p><h4 id="支持四级标题（类 -Atx- 形式，井号方式）"><a href="# 支持四级标题（类 -Atx- 形式，井号方式）" class="headerlink" title="支持四级标题（类 Atx 形式，井号方式）"></a>支持四级标题（类 Atx 形式，井号方式）</h4><h5 id="支持五级标题（类 -Atx- 形式，井号方式）"><a href="# 支持五级标题（类 -Atx- 形式，井号方式）" class="headerlink" title="支持五级标题（类 Atx 形式，井号方式）"></a>支持五级标题（类 Atx 形式，井号方式）</h5><h6 id="支持六级标题（类 -Atx- 形式，井号方式）"><a href="# 支持六级标题（类 -Atx- 形式，井号方式）" class="headerlink" title="支持六级标题（类 Atx 形式，井号方式）"></a>支持六级标题（类 Atx 形式，井号方式）</h6><p><del>删除线（两条波浪线）</del></p><p><strong>粗体和嵌入 _ 斜体 _</strong>   两个星号内下划线括住。【提示】Obsidian 支持内嵌斜体，请在浏览模式打开。</p><p><em><strong>全部粗体和斜体（三个星号）</strong></em></p><p>使用 <sub> 下标</sub></p><p>使用 <sup> 上标</sup></p><ul><li>加号创建的无序列表</li></ul><p>任务列表展示：</p><ul><li><input checked=""disabled="" type="checkbox"> 任务列表</li><li><input disabled=""type="checkbox"> 任务列表</li></ul><p>表情符号（使用冒号括住） :+1:   :smile:【提示】Obsidian 不支持，但是可以直接输入😯</p><p>脚注。使用此括号 [^11] 语法为您的内容 [^12] 添加脚注。</p><p>[^11]: My reference.<br>[^12]: To add line breaks within a footnote, prefix new lines with 2 spaces.<br>  This is a second line. （然而 Typora 不支持这种方式换行）</p><p>【提示】Obsidian 会把脚注自动放到页面后。</p><p>支持转义符（反引号）忽略 Markdown 格式。</p><p>以下符号可以转义（<a href="https://daringfireball.net/projects/markdown/syntax">Daring Fireball: Markdown Syntax Documentation</a>）</p><p>\   backslash</p><p>`   backtick</p><p>*   asterisk</p><p>_   underscore</p><p>{}  curly braces</p><p>[]  square brackets</p><p>()  parentheses</p><p>支持 Markdown 的隐藏渲染：</p><!-- This content will not appear in the rendered Markdown --><p>【提示】Typora 处理仅仅是标黄，Obsidian 支持。</p><h2 id="高级格式"><a href="# 高级格式" class="headerlink" title="高级格式"></a>高级格式 </h2><p> 如果你正在使用 Typora 预览，建议打开偏好设置调整以支持更多语法。</p><h3 id="表格"><a href="# 表格" class="headerlink" title="表格"></a>表格 </h3><p> 表格末尾的竖线可选。单元格的宽度可以不同，无需在列内准确对齐。 标题行的第一列中必须至少有三个横线。可借助 <a href="https://www.tablesgenerator.com/markdown_tables">在线表格生成工具</a> 生成表格。</p><p>可以在表格中使用格式，例如链接、内联代码块和文本样式。</p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content <strong>Cell</strong></td></tr><tr><td><a href="https://docs.github.com/zh/get-started/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables">Content Cell</a></td><td><em>Content</em> Cell</td></tr><tr><td><code>Content Cell</code></td><td><em><strong>Content</strong></em> Cell</td></tr></tbody></table><p>可以通过在标题行中连字符的左侧、右侧或两侧添加冒号 <code> :</code>，来靠左、靠右或居中对齐列中的文本。</p><p>若要包含竖线 <code>|</code> 作为单元格中的内容，请在竖线前使用 <code> \</code></p><table><thead><tr><th align="left">Left-aligned</th><th align="center">Center-aligned</th><th align="right">Right-aligned</th></tr></thead><tbody><tr><td align="left">git status</td><td align="center">git status</td><td align="right">git status</td></tr><tr><td align="left">git diff</td><td align="center">&#96;</td><td align="right">git diff |</td></tr></tbody></table><h3 id="折叠部分"><a href="# 折叠部分" class="headerlink" title="折叠部分"></a>折叠部分</h3><details><summary>CLICK ME</summary><p><h4 id="We-can-hide-anything-even-code"><a href="#We-can-hide-anything-even-code" class="headerlink" title="We can hide anything, even code!"></a>We can hide anything, even code!</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puts <span class="string">&quot;Hello World&quot;</span></span><br></pre></td></tr></table></figure></p></details><p>【提示】Typora ，Obsidian 不支持。</p><h3 id="代码块"><a href="# 代码块" class="headerlink" title="代码块"></a>代码块 </h3><p> 要在围栏代码块中显示三重倒引号，请将其包在四个倒引号内。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">Look! You can see my backticks.</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>支持语法高亮（使用 <a href="https://github.com/github-linguist/linguist">github-linguist&#x2F;linguist: Language Savant. </a>）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure><p>使用代码块在 Markdown 中创建关系图。 GitHub 支持 Mermaid、GeoJSON、TopoJSON 和 ASCII STL 语法。</p><p>Mermaid 是一款受 Markdown 启发的工具，可将文本呈现为关系图。 例如，Mermaid 可以呈现流程图、序列图、饼图等。 有关详细信息，请参阅 <a href="https://mermaid-js.github.io/mermaid/#/">Mermaid 文档</a>。如果你的 Markdown 渲染器支持渲染的话，你应该看到下面流程图。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">    A--&gt;B;</span><br><span class="line">    A--&gt;C;</span><br><span class="line">    B--&gt;D;</span><br><span class="line">    C--&gt;D;</span><br></pre></td></tr></table></figure><p>可使用 GeoJSON 或 TopoJSON 语法创建交互式地图。 若要创建地图，请使用 <code>geojson</code> 或 <code>topojson</code> 语法标识符在围栏代码块中添加 GeoJSON 或 TopoJSON。如果你的 Markdown 渲染器支持渲染的话，你应该看到下面两幅图。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;type&quot;: &quot;FeatureCollection&quot;,</span><br><span class="line">  &quot;features&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;type&quot;: &quot;Feature&quot;,</span><br><span class="line">      &quot;id&quot;: 1,</span><br><span class="line">      &quot;properties&quot;: &#123;</span><br><span class="line">        &quot;ID&quot;: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;geometry&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;Polygon&quot;,</span><br><span class="line">        &quot;coordinates&quot;: [</span><br><span class="line">          [</span><br><span class="line">              [-90,35],</span><br><span class="line">              [-90,30],</span><br><span class="line">              [-85,30],</span><br><span class="line">              [-85,35],</span><br><span class="line">              [-90,35]</span><br><span class="line">          ]</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;type&quot;: &quot;Topology&quot;,</span><br><span class="line">  &quot;transform&quot;: &#123;</span><br><span class="line">    &quot;scale&quot;: [0.0005000500050005, 0.00010001000100010001],</span><br><span class="line">    &quot;translate&quot;: [100, 0]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;objects&quot;: &#123;</span><br><span class="line">    &quot;example&quot;: &#123;</span><br><span class="line">      &quot;type&quot;: &quot;GeometryCollection&quot;,</span><br><span class="line">      &quot;geometries&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;type&quot;: &quot;Point&quot;,</span><br><span class="line">          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;&#125;,</span><br><span class="line">          &quot;coordinates&quot;: [4000, 5000]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;type&quot;: &quot;LineString&quot;,</span><br><span class="line">          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;, &quot;prop1&quot;: 0&#125;,</span><br><span class="line">          &quot;arcs&quot;: [0]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;type&quot;: &quot;Polygon&quot;,</span><br><span class="line">          &quot;properties&quot;: &#123;&quot;prop0&quot;: &quot;value0&quot;,</span><br><span class="line">            &quot;prop1&quot;: &#123;&quot;this&quot;: &quot;that&quot;&#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;arcs&quot;: [[1]]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;arcs&quot;: [[[4000, 0], [1999, 9999], [2000, -9999], [2000, 9999]],[[0, 0], [0, 9999], [2000, 0], [0, -9999], [-2000, 0]]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GFM 可以直接在 Markdown 中使用 ASCII STL 语法来创建交互式 3D 模型。 若要显示模型，请使用 <code>stl</code> 语法标识符在围栏代码块中添加 ASCII STL 语法。如果你的 Markdown 渲染器支持渲染的话，应该看到一个立方体而不是代码块。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">solid cube_corner</span><br><span class="line">  facet normal 0.0 -1.0 0.0</span><br><span class="line">    outer loop</span><br><span class="line">      vertex 0.0 0.0 0.0</span><br><span class="line">      vertex 1.0 0.0 0.0</span><br><span class="line">      vertex 0.0 0.0 1.0</span><br><span class="line">    endloop</span><br><span class="line">  endfacet</span><br><span class="line">  facet normal 0.0 0.0 -1.0</span><br><span class="line">    outer loop</span><br><span class="line">      vertex 0.0 0.0 0.0</span><br><span class="line">      vertex 0.0 1.0 0.0</span><br><span class="line">      vertex 1.0 0.0 0.0</span><br><span class="line">    endloop</span><br><span class="line">  endfacet</span><br><span class="line">  facet normal -1.0 0.0 0.0</span><br><span class="line">    outer loop</span><br><span class="line">      vertex 0.0 0.0 0.0</span><br><span class="line">      vertex 0.0 0.0 1.0</span><br><span class="line">      vertex 0.0 1.0 0.0</span><br><span class="line">    endloop</span><br><span class="line">  endfacet</span><br><span class="line">  facet normal 0.577 0.577 0.577</span><br><span class="line">    outer loop</span><br><span class="line">      vertex 1.0 0.0 0.0</span><br><span class="line">      vertex 0.0 1.0 0.0</span><br><span class="line">      vertex 0.0 0.0 1.0</span><br><span class="line">    endloop</span><br><span class="line">  endfacet</span><br><span class="line">endsolid</span><br></pre></td></tr></table></figure><p>【提示】Typora、Obsidian 不支持 <code>geojson</code> 、 <code>topojson</code> 或 <code>ASCII STL</code> 语法。</p><h3 id="数学表达式"><a href="# 数学表达式" class="headerlink" title="数学表达式"></a>数学表达式 </h3><p> 内联表达式：This sentence uses <code>$</code> delimiters to show math inline:  $\sqrt{3x-1}+(1+x)^2$</p><p>要以块的形式添加数学表达式，请启动一个新行，并使用两个美元符号 <code>$$</code> 分隔表达式。</p><p>$$<br>\left(\sum_{k&#x3D;1}^n a_k b_k \right)^2 \leq \left(\sum_{k&#x3D;1}^n a_k^2 \right) \left(\sum_{k&#x3D;1}^n b_k^2 \right)<br>$$</p><p>或者，可以使用 <code>math</code> 代码块语法将数学表达式显示为块。 使用此语法时，无需使用 <code>$$</code> 分隔符。【提示】Typora、Obsidian 不支持。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\sqrt&#123;3&#125;</span><br></pre></td></tr></table></figure><p>表示美元符号：</p><ul><li>在数学表达式内，在显式 <code>$</code> 之前添加一个 <code>\</code> 符号。<ul><li>This expression uses <code>\$</code> to display a dollar sign: $\sqrt{$4}$</li></ul></li><li>在数学表达式之外，但在同一行上，在显式 <code>$</code> 两边使用 span 标记。<ul><li>To split <span>$</span>100 in half, we calculate $​100&#x2F;2$</li><li>【提示】Typora 不支持。</li></ul></li></ul><p>如果你还想学习更多，请看 <a href="https://github.github.com/gfm/">GitHub Flavored Markdown Spec</a></p><p>在网页上以文本的形式展示数学公式，只需要一个 LaTeX 的子集能渲染数学公式即可。KaTeX 就是这样一个支持 HTML 的轻量级的数学公式引擎。因此，在网页中编写数学公式应注意使用兼容性更广的语法。</p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p><strong>Typora</strong> 使用 GFM，其特色在于“WYSIWYG”，其有自己特色的语法渲染。</p><p>使用类 Setext 形式 (<a href="https://en.wikipedia.org/wiki/Setext">Setext - Wikipedia</a>) 创建标题。注意使用 Shift+Enter 换行。（有线）</p><p>使用类 Atx 形式创建标题，一共可以有 6 个级别。（井号）</p><p>使用 <code>[TOC]</code> 创建目录：</p><p>[TOC]</p><p>分割线使用三个以上符号（最后一个使用了标签）。符号中间可以插入空格。</p><hr><hr><hr><hr><hr><hr><hr /><p><kbd>Esc</kbd></p><p>段落的换行是使用两个以上的空格加回车（在 Typora 编辑器里是<kbd>Shift</kbd>+<kbd>Enter</kbd>）</p><p>或者使用 HTML 标签 <br> 进行换行</p><p>不要吝惜回车，在一些情况下回车会被吞掉！</p><p>代码块内还能高亮：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Here&#x27;s an example:</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">function test() &#123;</span><br><span class="line">  console.log(&quot;notice the blank line before this function?&quot;);</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">syntax highlighting:</span><br><span class="line">```ruby</span><br><span class="line">require &#x27;redcarpet&#x27;</span><br><span class="line">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><br><span class="line">puts markdown.to_html</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>Typora now supports <a href="http://jekyllrb.com/docs/frontmatter/">YAML Front Matter</a>. Input <code>---</code> at the top of the article and then press <code>Return</code> to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora. 这里就不演示了哈，弄 Hexo 的喜闻乐见。</p><p>支持有标题的 Link，试试鼠标停留在上面：<a href="http://example.com/" title="Title">an example</a></p><p>Typora allows you to insert URLs as links, wrapped by <code>&lt;</code>brackets<code>&gt;</code>.</p><p><code>&lt;i@typora.io&gt;</code> becomes <a href="mailto:&#105;&#x40;&#x74;&#x79;&#x70;&#111;&#114;&#x61;&#x2e;&#x69;&#111;">i@typora.io</a>.</p><p>Typora will also automatically link standard URLs. e.g: <a href="http://www.google.com/">www.google.com</a>. 就是没有任何标记也解析出地址了。</p><p>Underline is powered by raw HTML.</p><p>支持下划线：<code>&lt;u&gt; 下划线 &lt;/u&gt;</code> becomes <u>下划线</u>.</p><p>支持上下标（在偏好设置中设置）：H<del>2</del>O  X^2^</p><p>支持高亮：&#x3D;&#x3D;highlight&#x3D;&#x3D;</p><h1 id="Obsidian-Flavored-Markdown（OFM）"><a href="#Obsidian-Flavored-Markdown（OFM）" class="headerlink" title="Obsidian Flavored Markdown（OFM）"></a>Obsidian Flavored Markdown（OFM）</h1><p>Obsidian 是一个基于 Markdown 进行记录的知识库软件，特点在于支持笔记的双向链接。因此，有自己的独特语法。</p><p>Obsidian 努力让 Obsidian 的语法不偏离正统的 Markdown 语法太多。总的来看，Obsidian 的语法大多还是基于 CommonMark，包括了一些 GitHub Flavored Markdown（GFM）和 LaTeX，以及 Obsidian<strong>特有的 </strong> 语法。</p><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td><strong>[[]]</strong></td><td><a href="https://help.obsidian.md/Linking+notes+and+files/Internal+links">Internal links</a></td></tr><tr><td><strong>![[]]</strong></td><td><a href="https://help.obsidian.md/Linking+notes+and+files/Embedding+files">Embedding files</a></td></tr><tr><td><code>%%</code></td><td><a href="https://help.obsidian.md/Editing+and+formatting/Basic+formatting+syntax#Comments">Comments</a></td></tr><tr><td><code>&gt; [!note]</code></td><td><a href="https://help.obsidian.md/Editing+and+formatting/Callouts">Callouts</a></td></tr></tbody></table><p>提示：为防止其他插件影响，Embedding files 的示例含转义字符。</p><p>Obsidian doesn’t support Markdown syntax or blank lines within HTML blocks.</p><p>参考：</p><ul><li><a href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BD%A0%E7%9A%84%E7%AC%94%E8%AE%B0">格式化你的笔记 - Obsidian 中文帮助 - Obsidian Publish</a></li><li><a href="https://help.obsidian.md/Editing+and+formatting/Obsidian+Flavored+Markdown">Obsidian Flavored Markdown - Obsidian Help</a></li></ul><h2 id="Internal-links- 内部链接"><a href="#Internal-links- 内部链接" class="headerlink" title="Internal links 内部链接"></a>Internal links 内部链接 </h2><p> 通过 <strong>[[]]</strong> 来链接库中任意一个文件。</p><p>链接一篇笔记：例如 [[双链渲染测试]]。</p><p>你可以将图片或者音频等附件嵌入到你的笔记中。嵌入文件的语法为 <strong>![[文件名.png]]</strong></p><p>你可以通过相同的语法将 PDF 文件嵌入到你的笔记中。除此之外，你可以通过 <strong>![[My File.pdf#page&#x3D;number]]</strong> 这样的形式直接指定嵌入 PDF 文件的页码。</p><p>由于 Markdown 兼容 HTML，因此你可以使用“iframe”将网页嵌入到笔记中。</p><blockquote><p>这个语法实际受到了 Markdown 相关语法的启发：</p><ol><li>在 Markdown 中，[Image](link.png) 可以让链接指向图片，而 ![Image](link.png) 能让图片嵌入到当前文档中。</li><li>而 <a href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5">内部链接</a> 的语法则基于以下设定：[[My page]] 是 [My page](My page) 的一个便捷写法（或者是“语法糖”）。</li></ol><p>综上，我们可以得到 ![[My page]] 应该等效于 ![My page](My page)。</p><p>当然，我们也可以使用其他形式的语法。比如，Roam Research 的嵌入语法为 <code>&#123;&#123;embed: ((NODE_ID))&#125;&#125;</code>。我们曾经想过使用 <code>((Page name))</code> 这样的形式来表示嵌入，但后来我们认为还是 <strong>![[Page Name]]</strong> 的形式能更好地与其他语法保持一致，便于记忆，同时也能减少符号的占用，让其他符号能够表示其他含义。</p></blockquote><p>你可以通过以下语法调整嵌入到笔记中的图片的大小：</p><p>Markdown 风格的嵌入，使用 <strong>![AltText|100x100](<a href="https://url/to/image.png/">https://url/to/image.png\</a>)</strong> 这样的语法。</p><p>一般的嵌入，使用 <strong>![[image.png|100x100]]</strong> 这样的语法。</p><p>如果要根据图像的宽高比例进行缩放，请省略高度，如 <strong>![[image.png|100]]</strong>。</p><p><a href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI">Obsidian URI</a> 可以让你在其他应用或 Obsidian 的其他库中打开当前库的某篇笔记。</p><p>比如，你可以通过以下方式跳转到某个库中的某篇笔记（请注意 <a href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81">URI 的编码</a>）：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">打开某篇笔记</span>](<span class="link">obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md</span>)</span><br></pre></td></tr></table></figure><p>如果 url 中含有空格的话，空格需要转义为 <code>%20</code>，如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Export options</span>](<span class="link">Pasted%20image</span>)</span><br></pre></td></tr></table></figure><p>示例：<a href="Pasted%20image">Export options</a></p><p>当然，你也可以用 <code>&lt;&gt;</code> 将空格包含起来，如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">Slides Demo</span>](<span class="link">&lt;Slides Demo&gt;</span>)</span><br></pre></td></tr></table></figure><p>示例：<a href="Slides%20Demo">Slides Demo</a></p><h2 id="Comments- 注释"><a href="#Comments- 注释" class="headerlink" title="Comments 注释"></a>Comments 注释 </h2><p> 所谓注释，指的是会在编辑模式中显示，但不会在预览模式中显示的内容。使用 <code>%%</code> 可以将内容变为注释。以下为语法：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这里是行内注释：%% 预览模式下你将看不到这句话 %%</span><br><span class="line"></span><br><span class="line">这里是跨行注释：</span><br><span class="line">%%</span><br><span class="line">所谓跨行 </span><br><span class="line"> 就是可以有很多行</span><br><span class="line">%%</span><br></pre></td></tr></table></figure><p>以下为示例：</p><p>这里是行内注释：%% 预览模式下你将看不到这句话 %%</p><p>这里是跨行注释：</p><p>%%<br>所谓跨行 <br> 就是可以有很多行<br>%%</p><h2 id="标注 -Callouts"><a href="# 标注 -Callouts" class="headerlink" title="标注 Callouts"></a>标注 Callouts</h2><p>参考：<a href="https://help.obsidian.md/Editing+and+formatting/Callouts">Callouts</a></p><blockquote><p>GFM 也存在类似的语法：<a href="https://docs.github.com/en/contributing/style-guide-and-content-model/style-guide">Style guide - GitHub Docs</a><br>Microsoft 也有类似的语法，详看后文。</p></blockquote><p>支持以下类型：</p><ul><li>note</li><li>abstract, summary, tldr</li><li>info</li><li>todo</li><li>tip, hint, important</li><li>success, check, done</li><li>question, help, faq</li><li>warning, caution, attention</li><li>failure, fail, missing</li><li>danger, error</li><li>bug</li><li>example</li><li>quote, cite</li></ul><blockquote><p>[!Any]<br>当类型不在列表中时。</p></blockquote><blockquote><p>[!note]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!abstract]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!summary]</p></blockquote><blockquote><p>[!tldr]</p></blockquote><blockquote><p>[!info]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!todo]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!tip]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!hint]</p></blockquote><blockquote><p>[!important]</p></blockquote><blockquote><p>[!success]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!check]</p></blockquote><blockquote><p>[!done]</p></blockquote><blockquote><p>[!question]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!help]</p></blockquote><blockquote><p>[!faq]</p></blockquote><blockquote><p>[!warning]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!caution]</p></blockquote><blockquote><p>[!attention]</p></blockquote><blockquote><p>[!failure]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!fail]</p></blockquote><blockquote><p>[!missing]</p></blockquote><blockquote><p>[!danger]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!error]</p></blockquote><blockquote><p>[!bug]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!example]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!quote]<br>Lorem ipsum dolor sit amet</p></blockquote><blockquote><p>[!cite]</p></blockquote><p>折叠：</p><blockquote><p>[!question]- 折叠尝试（无折叠内容）</p></blockquote><blockquote><p>[!cite]- 折叠尝试（默认关）<br>折叠内容</p></blockquote><blockquote><p>[!success]- 折叠尝试（默认开）<br>折叠内容</p></blockquote><p>在不打断笔记流的情况下使用标注附加内容。</p><blockquote><p>[!info]<br>默认标题<br>Here’s a callout block.<br>It supports <strong>Markdown</strong>, <em>Wikilinks and embeds</em>!</p><p>无序列表：</p><ul><li>项目 1</li></ul><p>有序列表：</p><ol><li>项目 a</li></ol></blockquote><blockquote><p>[!tip] 自定义标题 <br> 公式渲染：<br>$$<br>r+v-e&#x3D;2<br>$$</p><p>行内代码：<code>Class&lt;?&gt; class = MyClass.class;</code></p><p>图片：<img src="https://commonmark.org/help/images/favicon.png" alt="图片链接"></p></blockquote><blockquote><p>[!error] 标题内公式 $a^2+b^2&#x3D;c^2$，标题内代码 <code>Hello world!</code></p></blockquote><blockquote><p>[!cite] 标题内图片：<img src="https://commonmark.org/help/images/favicon.png" alt="图片链接">图片后文字</p></blockquote><blockquote><p>[!question] Can callouts be nested?</p><blockquote><p>[!todo] Yes!, they can.</p><blockquote><p>[!example]+  You can even use multiple layers of nesting.</p><blockquote><p>[!cite]- 折叠尝试 <br> 折叠内容</p></blockquote></blockquote></blockquote></blockquote><h2 id="其他"><a href="# 其他" class="headerlink" title="其他"></a>其他 </h2><h3 id="图表"><a href="# 图表" class="headerlink" title="图表"></a> 图表 </h3><p>Obsidian 通过 <a href="https://mermaid-js.github.io/">Mermaid</a> 及其所提供的 <a href="https://mermaid-js.github.io/mermaid-live-editor"> 编译器</a> 来为用户提供图表的绘制功能。</p><h1 id="Microsoft-Learn"><a href="#Microsoft-Learn" class="headerlink" title="Microsoft Learn"></a>Microsoft Learn</h1><blockquote><p>参考：<a href="https://learn.microsoft.com/en-us/contribute/content/markdown-reference">Markdown reference for Microsoft Learn - Contributor guide | Microsoft Learn</a></p></blockquote><p>Microsoft Learn 还支持自定义 Markdown 扩展。</p><p>例如：警报（备注、提示、重要提示、提醒、警告）</p><blockquote><p>[!NOTE]<br>Information the user should notice even if skimming.</p></blockquote><blockquote><p>[!TIP]<br>Optional information to help a user be more successful.</p></blockquote><blockquote><p>[!IMPORTANT]<br>Essential information required for user success.</p></blockquote><blockquote><p>[!CAUTION]<br>Negative potential consequences of an action.</p></blockquote><blockquote><p>[!WARNING]<br>Dangerous certain consequences of an action.</p></blockquote><p>其他语法详见文档：<a href="https://learn.microsoft.com/zh-cn/contribute/markdown-reference">Microsoft Learn 的 Markdown 参考 - Contributor guide | Microsoft Learn</a></p><p>【提示：与 OFM 的 Callouts 语法一致，具体详看 OFM】</p><h1 id="附录"><a href="# 附录" class="headerlink" title="附录"></a>附录</h1><h2 id="HTML- 支持情况"><a href="#HTML- 支持情况" class="headerlink" title="HTML 支持情况"></a>HTML 支持情况</h2><iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src=&quot;xxx.mp4&quot; /&gt;  # 这个放在 Hexo 会使后文无法显示，故此处以代码块包围</span><br></pre></td></tr></table></figure><p>可以使用普通的 <code>&lt;img&gt;</code> 标签指定图片的高度与宽度：</p><img src="https://commonmark.org/help/images/favicon.png" width="30%"><h3 id="一般标签"><a href="# 一般标签" class="headerlink" title="一般标签"></a>一般标签 </h3><p> 不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>A</kbd> 快速打开 QQ 截屏工具，这里使用了 <code>&lt;kbd&gt;</code> 标签</p><p>这是 <sub> 下标 </sub>   这是<sup> 上标 </sup>    换行标签<br> 换行了</p><p>标签：</p><p><em>强调的内容 (好像和斜体差不多)</em> [^ 斜体]   <strong>语气更强 (粗体？)</strong>[^ 加粗]    <code>代码 scanf()</code>    <var>变量 </var>    <cite> 引用</cite></p><h3 id="字体、颜色和大小"><a href="# 字体、颜色和大小" class="headerlink" title="字体、颜色和大小"></a>字体、颜色和大小 </h3><p><b> 粗体文本 </b>    <i> 斜体文本 </i>    <big> 大号字体 </big>    <small> 小号字体 </small>    <tt> 等宽文本 </tt>  <u> 下划线</u></p><p><font face="黑体">黑体 </font>  <font face="微软雅黑"> 微软雅黑 </font>  <font face="STCAIYUN"> 华文彩云 </font>  <font face="华文行楷"> 华文行楷 </font>  <font face="时尚中黑"> 时尚中黑</font>  （我猜你电脑里装有什么字体就能用什么字体）</p><p><mark>黄色高亮</mark></p><p><font color=#00ffff size=3>#00ffff</font>   <font color=gray size=3>gray 色</font>    <font color=#0099ff size=5 face="黑体">#0099ff size&#x3D;5 黑体</font></p><p><a href='#color'>附录：颜色名列表</a></p><h3 id="折叠段落"><a href="# 折叠段落" class="headerlink" title="折叠段落"></a>折叠段落</h3><details><summary>Title</summary>content</details><h3 id="设置锚点"><a href="# 设置锚点" class="headerlink" title="设置锚点"></a>设置锚点 </h3><p><a href='#jump'> 点我跳转（Typora 下按住 Ctrl 键点击）</a></p><p><a href="#jump_two">点我跳转 2</a></p><p>这里给出两种方法实现锚点</p><p><a name='jump'>跳转到这里</a></p><p><span id = "jump_two">跳转到这里 2</span></p><h3 id="表格 -1"><a href="# 表格 -1" class="headerlink" title="表格"></a>表格</h3><table><tbody>    <tr>        <th rowspan="3">我占了三行</th>        <th><font color="Green">第一列</font></th>        <th>第二列</th>        <th>第三列</th>    </tr>    <tr>        <td bgcolor="Tomato">第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr>    <tr>        <td>第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr></table><h3 id="段首缩进"><a href="# 段首缩进" class="headerlink" title="段首缩进"></a>段首缩进 </h3><p> 使用特殊占位符，不同占位符所占空白是不一样大的（请在源码模式下查看）：</p><p>&ensp; 或者 &#8194; 表示一个半角的空格</p><p>&emsp; 或者 &#8195; 表示一个全角的空格</p><p>&emsp; 或者 &emsp; 两个全角的空格（用的比较多）</p><p>&nbsp; 或者 &#160; 不断行的空白格</p><h3 id="特殊符号"><a href="# 特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><p>&copy;  &trade;  &amp;  &lt;  &gt;  &pound; &yen; &euro; &reg; &plusmn; &sect;  X&sup2; Y&sup3; &frac34; &laquo; &raquo; 37.2&ordm;C</p><h2 id="Mermaid- 图示例"><a href="#Mermaid- 图示例" class="headerlink" title="Mermaid 图示例"></a>Mermaid 图示例 </h2><h3 id="流程图"><a href="# 流程图" class="headerlink" title="流程图"></a> 流程图 </h3><h4 id="横向流程图"><a href="# 横向流程图" class="headerlink" title="横向流程图"></a> 横向流程图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123; 条件 a&#125;</span><br><span class="line">    C --&gt;|a=1| D[结果 1]</span><br><span class="line">    C --&gt;|a=2| E[结果 2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure><h4 id="竖向流程图"><a href="# 竖向流程图" class="headerlink" title="竖向流程图"></a>竖向流程图</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123; 条件 a&#125;</span><br><span class="line">    C --&gt; |a=1| D[结果 1]</span><br><span class="line">    C --&gt; |a=2| E[结果 2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure><h3 id="UML- 标准时序图"><a href="#UML- 标准时序图" class="headerlink" title="UML 标准时序图"></a>UML 标准时序图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt; 虚线，-&gt;&gt; 实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三 -&gt; 王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五 -&gt; 王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt; 看医生...</span><br><span class="line">    李四 --&gt;&gt; 张三: 很好!</span><br><span class="line">    王五 -&gt; 李四: 你怎么样?</span><br><span class="line">    李四 --&gt; 王五: 很好!</span><br></pre></td></tr></table></figure><h3 id="甘特图"><a href="# 甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI 设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure><h2 id="sequence- 图示例"><a href="#sequence- 图示例" class="headerlink" title="sequence 图示例"></a>sequence 图示例</h2><p>【提示】Obsidian 不支持。</p><h3 id="UML- 时序图"><a href="#UML- 时序图" class="headerlink" title="UML 时序图"></a>UML 时序图 </h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> 对象 A-&gt; 对象 B: 对象 B 你好吗?（请求）</span><br><span class="line">Note right of 对象 B: 对象 B 的描述 </span><br><span class="line">Note left of 对象 A: 对象 A 的描述(提示)</span><br><span class="line"> 对象 B--&gt; 对象 A: 我很好 (响应)</span><br><span class="line"> 对象 A-&gt; 对象 B: 你真的好吗？</span><br></pre></td></tr></table></figure><h3 id="UML- 标准时序图复杂"><a href="#UML- 标准时序图复杂" class="headerlink" title="UML 标准时序图复杂"></a>UML 标准时序图复杂 </h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line"> 对象 A-&gt; 对象 B: 对象 B 你好吗?（请求）</span><br><span class="line">Note right of 对象 B: 对象 B 的描述 </span><br><span class="line">Note left of 对象 A: 对象 A 的描述(提示)</span><br><span class="line"> 对象 B--&gt; 对象 A: 我很好 (响应)</span><br><span class="line"> 对象 B-&gt; 小三: 你好吗 </span><br><span class="line"> 小三 --&gt;&gt; 对象 A: 对象 B 找我了 </span><br><span class="line"> 对象 A-&gt; 对象 B: 你真的好吗？</span><br><span class="line">Note over 小三, 对象 B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure><h2 id="flow- 图"><a href="#flow- 图" class="headerlink" title="flow 图"></a>flow 图 </h2><p> 流程图代码分两块，上面一块是创建你的流程（创建元素），然后隔一行，创建流程的走向 (连接元素)。</p><ul><li>创建流程（元素）：tag&#x3D;&gt;type: content:&gt;url<ul><li>tag 是流程图中的标签，在第二段连接元素时会用到。名称可以任意，一般为流程的英文缩写和数字的组合。</li><li>type 用来确定标签的类型，<code>=&gt;</code> 后面表示类型。由于标签的名称可以任意指定，所以要依赖 type 来确定标签的类型（start、end、operation、subroutine、condition、inputoutput）</li><li>content 是流程图文本框中的描述内容，<code>:</code> 后面表示内容，中英文均可。特别注意，<strong>冒号与文本之间一定要有个空格</strong></li><li>url 是一个连接，与框框中的文本相绑定，<code>:&gt;</code> 后面就是对应的 url 链接，点击文本时可以通过链接跳转到 url 指定页面</li></ul></li><li>指向流程 (连接元素)：标识（类别）-&gt; 下一个标识<ul><li>使用 -&gt; 来连接两个元素</li><li>对于 condition 类型，有 yes 和 no 两个分支，如示例中的 cond(yes) 和 cond(no)</li><li>每个元素可以制定分支走向，默认向下，也可以用 right 指向右边，如示例中 cond2(yes,right)。</li></ul></li></ul><p>【提示】Obsidian 不支持。</p><h3 id="标准流程图（横向）"><a href="# 标准流程图（横向）" class="headerlink" title="标准流程图（横向）"></a>标准流程图（横向）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h3 id="标准流程图"><a href="# 标准流程图" class="headerlink" title="标准流程图"></a>标准流程图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h2 id="PlantUML- 文本绘图"><a href="#PlantUML- 文本绘图" class="headerlink" title="PlantUML 文本绘图"></a>PlantUML 文本绘图</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@startuml</span><br><span class="line">Bob -&gt; Alice : hello</span><br><span class="line">Alice -&gt; Wonderland: hello</span><br><span class="line">Wonderland -&gt; next: hello</span><br><span class="line">next -&gt; Last: hello</span><br><span class="line">Last -&gt; next: hello</span><br><span class="line">next -&gt; Wonderland : hello</span><br><span class="line">Wonderland -&gt; Alice : hello</span><br><span class="line">Alice -&gt; Bob: hello</span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
